// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WePromoLink.Data;

#nullable disable

namespace WePromoLink.Shared.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20231003221659_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("WePromoLink.HitModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Counter")
                        .HasColumnType("int");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FirstHitAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("GeoDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("GeolocatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsGeolocated")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastHitAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("LinkModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Origin")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GeoDataId");

                    b.HasIndex("LinkModelId");

                    b.ToTable("Hits");
                });

            modelBuilder.Entity("WePromoLink.Models.AbuseReportModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CampaignId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CampaignId");

                    b.HasIndex("UserId");

                    b.ToTable("AbuseReports");
                });

            modelBuilder.Entity("WePromoLink.Models.AffiliatedUserModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<int>("NumberPayments")
                        .HasColumnType("int");

                    b.Property<Guid>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("TotalPayments")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("UserModelId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.HasIndex("UserModelId");

                    b.ToTable("AffiliatedUsers");
                });

            modelBuilder.Entity("WePromoLink.Models.AffiliateModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("AffiliateLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Affiliates")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("MRR")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OTR")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Profit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("UserModelId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserModelId")
                        .IsUnique();

                    b.ToTable("AffiliatePrograms");
                });

            modelBuilder.Entity("WePromoLink.Models.AvailableModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Etag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("MaxAge")
                        .HasColumnType("time");

                    b.Property<Guid>("UserModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Value")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.HasKey("Id");

                    b.HasIndex("UserModelId")
                        .IsUnique();

                    b.ToTable("Availables");
                });

            modelBuilder.Entity("WePromoLink.Models.BitcoinBillingMethod", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("VerifiedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("UserModelId")
                        .IsUnique();

                    b.ToTable("BitcoinBillings");
                });

            modelBuilder.Entity("WePromoLink.Models.BudgetModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Etag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("MaxAge")
                        .HasColumnType("time");

                    b.Property<Guid>("UserModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Value")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.HasKey("Id");

                    b.HasIndex("UserModelId")
                        .IsUnique();

                    b.ToTable("Budgets");
                });

            modelBuilder.Entity("WePromoLink.Models.CampaignModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Budget")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("EPM")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.Property<string>("ExternalId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid?>("ImageDataModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("bit");

                    b.Property<bool>("IsBlocked")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastClick")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastShared")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserModelId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ExternalId");

                    b.HasIndex("ImageDataModelId");

                    b.HasIndex("UserModelId");

                    b.ToTable("Campaigns");
                });

            modelBuilder.Entity("WePromoLink.Models.ClickLastWeekOnLinksUserModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Etag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("MaxAge")
                        .HasColumnType("time");

                    b.Property<Guid>("UserModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserModelId")
                        .IsUnique();

                    b.ToTable("ClickLastWeekOnLinksUsers");
                });

            modelBuilder.Entity("WePromoLink.Models.ClicksLastWeekOnCampaignModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CampaignModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Etag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("MaxAge")
                        .HasColumnType("time");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CampaignModelId")
                        .IsUnique();

                    b.ToTable("ClicksLastWeekOnCampaigns");
                });

            modelBuilder.Entity("WePromoLink.Models.ClicksLastWeekOnCampaignUserModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Etag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("MaxAge")
                        .HasColumnType("time");

                    b.Property<Guid>("UserModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserModelId")
                        .IsUnique();

                    b.ToTable("ClicksLastWeekOnCampaignUsers");
                });

            modelBuilder.Entity("WePromoLink.Models.ClicksLastWeekOnLinkModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Etag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("LinkModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeSpan?>("MaxAge")
                        .HasColumnType("time");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LinkModelId")
                        .IsUnique();

                    b.ToTable("ClicksLastWeekOnLinks");
                });

            modelBuilder.Entity("WePromoLink.Models.ClicksTodayOnCampaignModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CampaignModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Etag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("MaxAge")
                        .HasColumnType("time");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CampaignModelId")
                        .IsUnique();

                    b.ToTable("ClicksTodayOnCampaigns");
                });

            modelBuilder.Entity("WePromoLink.Models.ClicksTodayOnCampaignUserModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Etag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("MaxAge")
                        .HasColumnType("time");

                    b.Property<Guid>("UserModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserModelId")
                        .IsUnique();

                    b.ToTable("ClicksTodayOnCampaignUsers");
                });

            modelBuilder.Entity("WePromoLink.Models.ClicksTodayOnLinkModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Etag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("LinkModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeSpan?>("MaxAge")
                        .HasColumnType("time");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LinkModelId")
                        .IsUnique();

                    b.ToTable("ClicksTodayOnLinks");
                });

            modelBuilder.Entity("WePromoLink.Models.ClicksTodayOnLinksUserModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Etag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("MaxAge")
                        .HasColumnType("time");

                    b.Property<Guid>("UserModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserModelId")
                        .IsUnique();

                    b.ToTable("ClicksTodayOnLinksUsers");
                });

            modelBuilder.Entity("WePromoLink.Models.EarnLastWeekOnLinkModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Etag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("LinkModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeSpan?>("MaxAge")
                        .HasColumnType("time");

                    b.Property<decimal>("Value")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.HasKey("Id");

                    b.HasIndex("LinkModelId")
                        .IsUnique();

                    b.ToTable("EarnLastWeekOnLinks");
                });

            modelBuilder.Entity("WePromoLink.Models.EarnLastWeekUserModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Etag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("MaxAge")
                        .HasColumnType("time");

                    b.Property<Guid>("UserModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Value")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.HasKey("Id");

                    b.HasIndex("UserModelId")
                        .IsUnique();

                    b.ToTable("EarnLastWeekUsers");
                });

            modelBuilder.Entity("WePromoLink.Models.EarnTodayOnLinkModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Etag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("LinkModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeSpan?>("MaxAge")
                        .HasColumnType("time");

                    b.Property<decimal>("Value")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.HasKey("Id");

                    b.HasIndex("LinkModelId")
                        .IsUnique();

                    b.ToTable("EarnTodayOnLinks");
                });

            modelBuilder.Entity("WePromoLink.Models.EarnTodayUserModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Etag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("MaxAge")
                        .HasColumnType("time");

                    b.Property<Guid>("UserModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Value")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.HasKey("Id");

                    b.HasIndex("UserModelId")
                        .IsUnique();

                    b.ToTable("EarnTodayUsers");
                });

            modelBuilder.Entity("WePromoLink.Models.GenericEventModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("GenericEvent");
                });

            modelBuilder.Entity("WePromoLink.Models.GeoDataModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Continent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryFlagUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ISP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Latitude")
                        .HasPrecision(20, 14)
                        .HasColumnType("decimal(20,14)");

                    b.Property<decimal?>("Longitude")
                        .HasPrecision(20, 14)
                        .HasColumnType("decimal(20,14)");

                    b.Property<string>("Region")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegionCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zip")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("GeoDatas");
                });

            modelBuilder.Entity("WePromoLink.Models.HistoryClicksByCountriesOnCampaignModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CampaignModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Etag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("L0")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L8")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L9")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("MaxAge")
                        .HasColumnType("time");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("X0")
                        .HasColumnType("int");

                    b.Property<int>("X1")
                        .HasColumnType("int");

                    b.Property<int>("X2")
                        .HasColumnType("int");

                    b.Property<int>("X3")
                        .HasColumnType("int");

                    b.Property<int>("X4")
                        .HasColumnType("int");

                    b.Property<int>("X5")
                        .HasColumnType("int");

                    b.Property<int>("X6")
                        .HasColumnType("int");

                    b.Property<int>("X7")
                        .HasColumnType("int");

                    b.Property<int>("X8")
                        .HasColumnType("int");

                    b.Property<int>("X9")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CampaignModelId")
                        .IsUnique();

                    b.ToTable("HistoryClicksByCountriesOnCampaigns");
                });

            modelBuilder.Entity("WePromoLink.Models.HistoryClicksByCountriesOnCampaignUserModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Etag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("L0")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L8")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L9")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("MaxAge")
                        .HasColumnType("time");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("X0")
                        .HasColumnType("int");

                    b.Property<int>("X1")
                        .HasColumnType("int");

                    b.Property<int>("X2")
                        .HasColumnType("int");

                    b.Property<int>("X3")
                        .HasColumnType("int");

                    b.Property<int>("X4")
                        .HasColumnType("int");

                    b.Property<int>("X5")
                        .HasColumnType("int");

                    b.Property<int>("X6")
                        .HasColumnType("int");

                    b.Property<int>("X7")
                        .HasColumnType("int");

                    b.Property<int>("X8")
                        .HasColumnType("int");

                    b.Property<int>("X9")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserModelId")
                        .IsUnique();

                    b.ToTable("HistoryClicksByCountriesOnCampaignUsers");
                });

            modelBuilder.Entity("WePromoLink.Models.HistoryClicksByCountriesOnLinkModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Etag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("L0")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L8")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L9")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("LinkModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeSpan?>("MaxAge")
                        .HasColumnType("time");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("X0")
                        .HasColumnType("int");

                    b.Property<int>("X1")
                        .HasColumnType("int");

                    b.Property<int>("X2")
                        .HasColumnType("int");

                    b.Property<int>("X3")
                        .HasColumnType("int");

                    b.Property<int>("X4")
                        .HasColumnType("int");

                    b.Property<int>("X5")
                        .HasColumnType("int");

                    b.Property<int>("X6")
                        .HasColumnType("int");

                    b.Property<int>("X7")
                        .HasColumnType("int");

                    b.Property<int>("X8")
                        .HasColumnType("int");

                    b.Property<int>("X9")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LinkModelId")
                        .IsUnique();

                    b.ToTable("HistoryClicksByCountriesOnLinks");
                });

            modelBuilder.Entity("WePromoLink.Models.HistoryClicksByCountriesOnLinkUserModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Etag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("L0")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L8")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L9")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("MaxAge")
                        .HasColumnType("time");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("X0")
                        .HasColumnType("int");

                    b.Property<int>("X1")
                        .HasColumnType("int");

                    b.Property<int>("X2")
                        .HasColumnType("int");

                    b.Property<int>("X3")
                        .HasColumnType("int");

                    b.Property<int>("X4")
                        .HasColumnType("int");

                    b.Property<int>("X5")
                        .HasColumnType("int");

                    b.Property<int>("X6")
                        .HasColumnType("int");

                    b.Property<int>("X7")
                        .HasColumnType("int");

                    b.Property<int>("X8")
                        .HasColumnType("int");

                    b.Property<int>("X9")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserModelId")
                        .IsUnique();

                    b.ToTable("HistoryClicksByCountriesOnLinkUsers");
                });

            modelBuilder.Entity("WePromoLink.Models.HistoryClicksOnCampaignModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CampaignModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Etag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L0")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L1")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L2")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L3")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L4")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L5")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L6")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L7")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L8")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L9")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("MaxAge")
                        .HasColumnType("time");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("X0")
                        .HasColumnType("int");

                    b.Property<int>("X1")
                        .HasColumnType("int");

                    b.Property<int>("X2")
                        .HasColumnType("int");

                    b.Property<int>("X3")
                        .HasColumnType("int");

                    b.Property<int>("X4")
                        .HasColumnType("int");

                    b.Property<int>("X5")
                        .HasColumnType("int");

                    b.Property<int>("X6")
                        .HasColumnType("int");

                    b.Property<int>("X7")
                        .HasColumnType("int");

                    b.Property<int>("X8")
                        .HasColumnType("int");

                    b.Property<int>("X9")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CampaignModelId")
                        .IsUnique();

                    b.ToTable("HistoryClicksOnCampaigns");
                });

            modelBuilder.Entity("WePromoLink.Models.HistoryClicksOnCampaignUserModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Etag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L0")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L1")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L2")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L3")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L4")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L5")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L6")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L7")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L8")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L9")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("MaxAge")
                        .HasColumnType("time");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("X0")
                        .HasColumnType("int");

                    b.Property<int>("X1")
                        .HasColumnType("int");

                    b.Property<int>("X2")
                        .HasColumnType("int");

                    b.Property<int>("X3")
                        .HasColumnType("int");

                    b.Property<int>("X4")
                        .HasColumnType("int");

                    b.Property<int>("X5")
                        .HasColumnType("int");

                    b.Property<int>("X6")
                        .HasColumnType("int");

                    b.Property<int>("X7")
                        .HasColumnType("int");

                    b.Property<int>("X8")
                        .HasColumnType("int");

                    b.Property<int>("X9")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserModelId")
                        .IsUnique();

                    b.ToTable("HistoryClicksOnCampaignUsers");
                });

            modelBuilder.Entity("WePromoLink.Models.HistoryClicksOnLinkModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Etag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L0")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L1")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L2")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L3")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L4")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L5")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L6")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L7")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L8")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L9")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("LinkModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeSpan?>("MaxAge")
                        .HasColumnType("time");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("X0")
                        .HasColumnType("int");

                    b.Property<int>("X1")
                        .HasColumnType("int");

                    b.Property<int>("X2")
                        .HasColumnType("int");

                    b.Property<int>("X3")
                        .HasColumnType("int");

                    b.Property<int>("X4")
                        .HasColumnType("int");

                    b.Property<int>("X5")
                        .HasColumnType("int");

                    b.Property<int>("X6")
                        .HasColumnType("int");

                    b.Property<int>("X7")
                        .HasColumnType("int");

                    b.Property<int>("X8")
                        .HasColumnType("int");

                    b.Property<int>("X9")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LinkModelId")
                        .IsUnique();

                    b.ToTable("HistoryClicksOnLinkModels");
                });

            modelBuilder.Entity("WePromoLink.Models.HistoryClicksOnLinksUserModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Etag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L0")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L1")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L2")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L3")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L4")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L5")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L6")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L7")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L8")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L9")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("MaxAge")
                        .HasColumnType("time");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("X0")
                        .HasColumnType("int");

                    b.Property<int>("X1")
                        .HasColumnType("int");

                    b.Property<int>("X2")
                        .HasColumnType("int");

                    b.Property<int>("X3")
                        .HasColumnType("int");

                    b.Property<int>("X4")
                        .HasColumnType("int");

                    b.Property<int>("X5")
                        .HasColumnType("int");

                    b.Property<int>("X6")
                        .HasColumnType("int");

                    b.Property<int>("X7")
                        .HasColumnType("int");

                    b.Property<int>("X8")
                        .HasColumnType("int");

                    b.Property<int>("X9")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserModelId")
                        .IsUnique();

                    b.ToTable("HistoryClicksOnLinksUsers");
                });

            modelBuilder.Entity("WePromoLink.Models.HistoryClicksOnSharesUserModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Etag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L0")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L1")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L2")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L3")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L4")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L5")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L6")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L7")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L8")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L9")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("MaxAge")
                        .HasColumnType("time");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("X0")
                        .HasColumnType("int");

                    b.Property<int>("X1")
                        .HasColumnType("int");

                    b.Property<int>("X2")
                        .HasColumnType("int");

                    b.Property<int>("X3")
                        .HasColumnType("int");

                    b.Property<int>("X4")
                        .HasColumnType("int");

                    b.Property<int>("X5")
                        .HasColumnType("int");

                    b.Property<int>("X6")
                        .HasColumnType("int");

                    b.Property<int>("X7")
                        .HasColumnType("int");

                    b.Property<int>("X8")
                        .HasColumnType("int");

                    b.Property<int>("X9")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserModelId")
                        .IsUnique();

                    b.ToTable("HistoryClicksOnSharesUsers");
                });

            modelBuilder.Entity("WePromoLink.Models.HistoryEarnByCountriesOnLinkModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Etag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("L0")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L8")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L9")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("LinkModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeSpan?>("MaxAge")
                        .HasColumnType("time");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("X0")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.Property<decimal>("X1")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.Property<decimal>("X2")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.Property<decimal>("X3")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.Property<decimal>("X4")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.Property<decimal>("X5")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.Property<decimal>("X6")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.Property<decimal>("X7")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.Property<decimal>("X8")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.Property<decimal>("X9")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.HasKey("Id");

                    b.HasIndex("LinkModelId")
                        .IsUnique();

                    b.ToTable("HistoryEarnByCountriesOnLinks");
                });

            modelBuilder.Entity("WePromoLink.Models.HistoryEarnByCountriesUserModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Etag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("L0")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L8")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L9")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("MaxAge")
                        .HasColumnType("time");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("X0")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.Property<decimal>("X1")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.Property<decimal>("X2")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.Property<decimal>("X3")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.Property<decimal>("X4")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.Property<decimal>("X5")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.Property<decimal>("X6")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.Property<decimal>("X7")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.Property<decimal>("X8")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.Property<decimal>("X9")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.HasKey("Id");

                    b.HasIndex("UserModelId")
                        .IsUnique();

                    b.ToTable("HistoryEarnByCountriesUsers");
                });

            modelBuilder.Entity("WePromoLink.Models.HistoryEarnOnLinkModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Etag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L0")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L1")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L2")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L3")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L4")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L5")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L6")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L7")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L8")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L9")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("LinkModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeSpan?>("MaxAge")
                        .HasColumnType("time");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("X0")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.Property<decimal>("X1")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.Property<decimal>("X2")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.Property<decimal>("X3")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.Property<decimal>("X4")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.Property<decimal>("X5")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.Property<decimal>("X6")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.Property<decimal>("X7")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.Property<decimal>("X8")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.Property<decimal>("X9")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.HasKey("Id");

                    b.HasIndex("LinkModelId")
                        .IsUnique();

                    b.ToTable("HistoryEarnOnLinks");
                });

            modelBuilder.Entity("WePromoLink.Models.HistoryEarnOnLinksUserModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Etag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L0")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L1")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L2")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L3")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L4")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L5")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L6")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L7")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L8")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L9")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("MaxAge")
                        .HasColumnType("time");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("X0")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.Property<decimal>("X1")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.Property<decimal>("X2")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.Property<decimal>("X3")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.Property<decimal>("X4")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.Property<decimal>("X5")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.Property<decimal>("X6")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.Property<decimal>("X7")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.Property<decimal>("X8")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.Property<decimal>("X9")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.HasKey("Id");

                    b.HasIndex("UserModelId")
                        .IsUnique();

                    b.ToTable("HistoryEarnOnLinksUsers");
                });

            modelBuilder.Entity("WePromoLink.Models.HistorySharedByUsersOnCampaignModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CampaignModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Etag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("L0")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L8")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L9")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("MaxAge")
                        .HasColumnType("time");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("X0")
                        .HasColumnType("int");

                    b.Property<int>("X1")
                        .HasColumnType("int");

                    b.Property<int>("X2")
                        .HasColumnType("int");

                    b.Property<int>("X3")
                        .HasColumnType("int");

                    b.Property<int>("X4")
                        .HasColumnType("int");

                    b.Property<int>("X5")
                        .HasColumnType("int");

                    b.Property<int>("X6")
                        .HasColumnType("int");

                    b.Property<int>("X7")
                        .HasColumnType("int");

                    b.Property<int>("X8")
                        .HasColumnType("int");

                    b.Property<int>("X9")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CampaignModelId")
                        .IsUnique();

                    b.ToTable("HistorySharedByUsersOnCampaigns");
                });

            modelBuilder.Entity("WePromoLink.Models.HistorySharedByUsersUserModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Etag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("L0")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L8")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L9")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("MaxAge")
                        .HasColumnType("time");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("X0")
                        .HasColumnType("int");

                    b.Property<int>("X1")
                        .HasColumnType("int");

                    b.Property<int>("X2")
                        .HasColumnType("int");

                    b.Property<int>("X3")
                        .HasColumnType("int");

                    b.Property<int>("X4")
                        .HasColumnType("int");

                    b.Property<int>("X5")
                        .HasColumnType("int");

                    b.Property<int>("X6")
                        .HasColumnType("int");

                    b.Property<int>("X7")
                        .HasColumnType("int");

                    b.Property<int>("X8")
                        .HasColumnType("int");

                    b.Property<int>("X9")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserModelId")
                        .IsUnique();

                    b.ToTable("HistorySharedByUsersUsers");
                });

            modelBuilder.Entity("WePromoLink.Models.HistorySharedOnCampaignModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CampaignModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Etag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L0")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L1")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L2")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L3")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L4")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L5")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L6")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L7")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L8")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L9")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("MaxAge")
                        .HasColumnType("time");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("X0")
                        .HasColumnType("int");

                    b.Property<int>("X1")
                        .HasColumnType("int");

                    b.Property<int>("X2")
                        .HasColumnType("int");

                    b.Property<int>("X3")
                        .HasColumnType("int");

                    b.Property<int>("X4")
                        .HasColumnType("int");

                    b.Property<int>("X5")
                        .HasColumnType("int");

                    b.Property<int>("X6")
                        .HasColumnType("int");

                    b.Property<int>("X7")
                        .HasColumnType("int");

                    b.Property<int>("X8")
                        .HasColumnType("int");

                    b.Property<int>("X9")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CampaignModelId")
                        .IsUnique();

                    b.ToTable("HistorySharedOnCampaigns");
                });

            modelBuilder.Entity("WePromoLink.Models.ImageDataModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Bound")
                        .HasColumnType("bit");

                    b.Property<string>("Compressed")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("CompressedAspectRatio")
                        .HasColumnType("float");

                    b.Property<int>("CompressedHeight")
                        .HasColumnType("int");

                    b.Property<int>("CompressedWidth")
                        .HasColumnType("int");

                    b.Property<string>("ExternalId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Medium")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("MediumAspectRatio")
                        .HasColumnType("float");

                    b.Property<int>("MediumHeight")
                        .HasColumnType("int");

                    b.Property<int>("MediumWidth")
                        .HasColumnType("int");

                    b.Property<string>("Original")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("OriginalAspectRatio")
                        .HasColumnType("float");

                    b.Property<int>("OriginalHeight")
                        .HasColumnType("int");

                    b.Property<int>("OriginalWidth")
                        .HasColumnType("int");

                    b.Property<string>("Thumbnail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ThumbnailAspectRatio")
                        .HasColumnType("float");

                    b.Property<int>("ThumbnailHeight")
                        .HasColumnType("int");

                    b.Property<int>("ThumbnailWidth")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ImageDatas");
                });

            modelBuilder.Entity("WePromoLink.Models.JoinWaitingListModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("JoinWaitingLists");
                });

            modelBuilder.Entity("WePromoLink.Models.LinkModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CampaignModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExternalId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("LastClick")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserModelId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CampaignModelId");

                    b.HasIndex("ExternalId");

                    b.HasIndex("UserModelId");

                    b.ToTable("Links");
                });

            modelBuilder.Entity("WePromoLink.Models.LockedModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Etag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("MaxAge")
                        .HasColumnType("time");

                    b.Property<Guid>("UserModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Value")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.HasKey("Id");

                    b.HasIndex("UserModelId")
                        .IsUnique();

                    b.ToTable("Lockeds");
                });

            modelBuilder.Entity("WePromoLink.Models.MyPageModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CallOfAction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Conversion")
                        .HasColumnType("int");

                    b.Property<string>("ImageHeaderUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QRUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Template")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Visited")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserModelId")
                        .IsUnique();

                    b.ToTable("MyPages");
                });

            modelBuilder.Entity("WePromoLink.Models.NotificationModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Etag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExternalId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("MaxAge")
                        .HasColumnType("time");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserModelId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ExternalId");

                    b.HasIndex("UserModelId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("WePromoLink.Models.PaymentTransaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.Property<Guid?>("CampaignModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CompletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExternalId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid?>("LinkModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Metadata")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransactionType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UserModelId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CampaignModelId");

                    b.HasIndex("ExternalId");

                    b.HasIndex("LinkModelId");

                    b.HasIndex("UserModelId");

                    b.ToTable("PaymentTransactions");
                });

            modelBuilder.Entity("WePromoLink.Models.PayoutStatModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Etag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("MaxAge")
                        .HasColumnType("time");

                    b.Property<Guid>("UserModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Value")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.HasKey("Id");

                    b.HasIndex("UserModelId")
                        .IsUnique();

                    b.ToTable("PayoutStats");
                });

            modelBuilder.Entity("WePromoLink.Models.PrivacyModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("PublicMyPage")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowAffiliateLinkOnMyPage")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowAffiliateLinkOnProfile")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowCallOfActionOnMyPage")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowCampaignsOnProfile")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowEmailOnProfile")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowLinksOnMyPage")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowLinksOnProfile")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowProfitOnProfile")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowQRUrlOnProfile")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowSocialsOnMyPage")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowSocialsOnProfile")
                        .HasColumnType("bit");

                    b.Property<bool>("UseMyPageTemplate")
                        .HasColumnType("bit");

                    b.Property<Guid>("UserModelId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserModelId")
                        .IsUnique();

                    b.ToTable("Privacies");
                });

            modelBuilder.Entity("WePromoLink.Models.ProfileModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Bio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageHeaderUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MyPageId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Social")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserModelId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserModelId")
                        .IsUnique();

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("WePromoLink.Models.ProfitModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Etag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("MaxAge")
                        .HasColumnType("time");

                    b.Property<Guid>("UserModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Value")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.HasKey("Id");

                    b.HasIndex("UserModelId")
                        .IsUnique();

                    b.ToTable("Profits");
                });

            modelBuilder.Entity("WePromoLink.Models.SettingModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("CampaignClickedOnEmail")
                        .HasColumnType("bit");

                    b.Property<bool>("CampaignClickedOnNotification")
                        .HasColumnType("bit");

                    b.Property<bool>("CampaignClickedOnRealTime")
                        .HasColumnType("bit");

                    b.Property<bool>("CampaignCreatedOnEmail")
                        .HasColumnType("bit");

                    b.Property<bool>("CampaignCreatedOnNotification")
                        .HasColumnType("bit");

                    b.Property<bool>("CampaignCreatedOnRealTime")
                        .HasColumnType("bit");

                    b.Property<bool>("CampaignDeletedOnEmail")
                        .HasColumnType("bit");

                    b.Property<bool>("CampaignDeletedOnNotification")
                        .HasColumnType("bit");

                    b.Property<bool>("CampaignDeletedOnRealTime")
                        .HasColumnType("bit");

                    b.Property<bool>("CampaignEditedOnEmail")
                        .HasColumnType("bit");

                    b.Property<bool>("CampaignEditedOnNotification")
                        .HasColumnType("bit");

                    b.Property<bool>("CampaignEditedOnRealTime")
                        .HasColumnType("bit");

                    b.Property<string>("CampaignLanguages")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CampaignPublishedOnEmail")
                        .HasColumnType("bit");

                    b.Property<bool>("CampaignPublishedOnNotification")
                        .HasColumnType("bit");

                    b.Property<bool>("CampaignPublishedOnRealTime")
                        .HasColumnType("bit");

                    b.Property<bool>("CampaignSharedOnEmail")
                        .HasColumnType("bit");

                    b.Property<bool>("CampaignSharedOnNotification")
                        .HasColumnType("bit");

                    b.Property<bool>("CampaignSharedOnRealTime")
                        .HasColumnType("bit");

                    b.Property<bool>("CampaignSoldOutOnEmail")
                        .HasColumnType("bit");

                    b.Property<bool>("CampaignSoldOutOnNotification")
                        .HasColumnType("bit");

                    b.Property<bool>("CampaignSoldOutOnRealTime")
                        .HasColumnType("bit");

                    b.Property<bool>("CampaignUnPublishedOnEmail")
                        .HasColumnType("bit");

                    b.Property<bool>("CampaignUnPublishedOnNotification")
                        .HasColumnType("bit");

                    b.Property<bool>("CampaignUnPublishedOnRealTime")
                        .HasColumnType("bit");

                    b.Property<bool>("HitGeoLocalizedSuccessOnEmail")
                        .HasColumnType("bit");

                    b.Property<bool>("HitGeoLocalizedSuccessOnNotification")
                        .HasColumnType("bit");

                    b.Property<bool>("HitGeoLocalizedSuccessOnRealTime")
                        .HasColumnType("bit");

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LinkClickedOnEmail")
                        .HasColumnType("bit");

                    b.Property<bool>("LinkClickedOnNotification")
                        .HasColumnType("bit");

                    b.Property<bool>("LinkClickedOnRealTime")
                        .HasColumnType("bit");

                    b.Property<bool>("LinkCreatedOnEmail")
                        .HasColumnType("bit");

                    b.Property<bool>("LinkCreatedOnNotification")
                        .HasColumnType("bit");

                    b.Property<bool>("LinkCreatedOnRealTime")
                        .HasColumnType("bit");

                    b.Property<Guid>("UserModelId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserModelId")
                        .IsUnique();

                    b.ToTable("Settings");
                });

            modelBuilder.Entity("WePromoLink.Models.SharedLastWeekOnCampaignModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CampaignModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Etag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("MaxAge")
                        .HasColumnType("time");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CampaignModelId")
                        .IsUnique();

                    b.ToTable("SharedLastWeekOnCampaigns");
                });

            modelBuilder.Entity("WePromoLink.Models.SharedLastWeekUserModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Etag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("MaxAge")
                        .HasColumnType("time");

                    b.Property<Guid>("UserModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserModelId")
                        .IsUnique();

                    b.ToTable("SharedLastWeekUsers");
                });

            modelBuilder.Entity("WePromoLink.Models.SharedTodayOnCampaignModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CampaignModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Etag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("MaxAge")
                        .HasColumnType("time");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CampaignModelId")
                        .IsUnique();

                    b.ToTable("SharedTodayOnCampaigns");
                });

            modelBuilder.Entity("WePromoLink.Models.SharedTodayUserModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Etag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("MaxAge")
                        .HasColumnType("time");

                    b.Property<Guid>("UserModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserModelId")
                        .IsUnique();

                    b.ToTable("SharedTodayUsers");
                });

            modelBuilder.Entity("WePromoLink.Models.StripeBillingMethod", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("VerifiedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("UserModelId")
                        .IsUnique();

                    b.ToTable("StripeBillings");
                });

            modelBuilder.Entity("WePromoLink.Models.SubscriptionFeatureModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("BoolValue")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SubscriptionPlanModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SubscriptionPlanModelId");

                    b.ToTable("SubscriptionFeatures");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4d250b37-5bc6-4a9c-9c13-6a95d9b4aa75"),
                            BoolValue = true,
                            Name = "Contain ads",
                            SubscriptionPlanModelId = new Guid("ac7de61d-55d9-4ffb-8016-81789a26c2ee")
                        },
                        new
                        {
                            Id = new Guid("04c14326-f7b4-4cac-af4f-29a8bfa81376"),
                            BoolValue = false,
                            Name = "Contain ads",
                            SubscriptionPlanModelId = new Guid("36bd6851-325b-47f1-8fb2-f7bebccdfff2")
                        });
                });

            modelBuilder.Entity("WePromoLink.Models.SubscriptionModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CanceledAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExternalId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsCanceled")
                        .HasColumnType("bit");

                    b.Property<bool>("IsExpired")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastPayment")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NextPayment")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SubscriptionPlanModelId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ExternalId");

                    b.HasIndex("SubscriptionPlanModelId");

                    b.ToTable("Subscriptions");
                });

            modelBuilder.Entity("WePromoLink.Models.SubscriptionPlanModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Annually")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.Property<string>("AnnualyPaymantLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AnnualyProductId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Discount")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.Property<string>("ExternalId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Metadata")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Monthly")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.Property<string>("MonthlyPaymantLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MonthlyProductId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ExternalId");

                    b.ToTable("SubscriptionPlans");

                    b.HasData(
                        new
                        {
                            Id = new Guid("36bd6851-325b-47f1-8fb2-f7bebccdfff2"),
                            Annually = 244m,
                            AnnualyPaymantLink = "https://buy.stripe.com/test_8wM8Ao6iAfFD3m0aEF",
                            AnnualyProductId = "prod_NpuAflpfqloJa9",
                            Discount = 15m,
                            ExternalId = "RdZhF_GhMK75",
                            Level = 2,
                            Monthly = 24m,
                            MonthlyPaymantLink = "https://buy.stripe.com/test_eVa9Es8qI0KJaOs7ss",
                            MonthlyProductId = "prod_NpnKrvEvvWJtqG",
                            Order = 2,
                            PaymentMethod = "stripe",
                            Tag = "Popular",
                            Title = "Professional"
                        },
                        new
                        {
                            Id = new Guid("ac7de61d-55d9-4ffb-8016-81789a26c2ee"),
                            Annually = 0m,
                            AnnualyPaymantLink = "",
                            AnnualyProductId = "",
                            Discount = 0m,
                            ExternalId = "AiZKq-4dL-6n",
                            Level = 1,
                            Monthly = 0m,
                            MonthlyPaymantLink = "",
                            MonthlyProductId = "",
                            Order = 1,
                            PaymentMethod = "bitcoin",
                            Tag = "",
                            Title = "Community"
                        });
                });

            modelBuilder.Entity("WePromoLink.Models.SurveyAnswerModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SurveyQuestionModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SurveyQuestionModelId");

                    b.ToTable("SurveyAnswers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e865a2bc-d576-45bc-b23a-56de71073748"),
                            SurveyQuestionModelId = new Guid("c5586c12-e2d2-4831-bdb9-259c0ef83298"),
                            Value = "Earning money through affiliate marketing"
                        },
                        new
                        {
                            Id = new Guid("d5364342-05e2-43e7-b816-588047bd9899"),
                            SurveyQuestionModelId = new Guid("c5586c12-e2d2-4831-bdb9-259c0ef83298"),
                            Value = "Promoting my products or services"
                        },
                        new
                        {
                            Id = new Guid("fcdab328-8201-43c8-a52d-17805c49372b"),
                            SurveyQuestionModelId = new Guid("c5586c12-e2d2-4831-bdb9-259c0ef83298"),
                            Value = "Exploring new advertising opportunities"
                        },
                        new
                        {
                            Id = new Guid("8567d9ac-52ba-4cf4-ba34-d5983de804b4"),
                            SurveyQuestionModelId = new Guid("c5586c12-e2d2-4831-bdb9-259c0ef83298"),
                            Value = "Connecting with other users and businesses"
                        },
                        new
                        {
                            Id = new Guid("ab2b77fa-3867-472b-b77f-1a15721f6723"),
                            SurveyQuestionModelId = new Guid("985ecaed-76a9-4dbe-8206-37249f932c0b"),
                            Value = "Credit/Debit card"
                        },
                        new
                        {
                            Id = new Guid("5fb9c1ba-65eb-499e-a1ea-a85685b73ddc"),
                            SurveyQuestionModelId = new Guid("985ecaed-76a9-4dbe-8206-37249f932c0b"),
                            Value = "PayPal"
                        },
                        new
                        {
                            Id = new Guid("636011ee-5ca0-4a04-ba44-d3955fa72aad"),
                            SurveyQuestionModelId = new Guid("985ecaed-76a9-4dbe-8206-37249f932c0b"),
                            Value = "Stripe"
                        },
                        new
                        {
                            Id = new Guid("d1ce3276-f208-49eb-a9de-edb7a45c8da4"),
                            SurveyQuestionModelId = new Guid("985ecaed-76a9-4dbe-8206-37249f932c0b"),
                            Value = "Bank transfer"
                        },
                        new
                        {
                            Id = new Guid("d00ab3bc-d7e4-40e8-befc-4b74650a31c5"),
                            SurveyQuestionModelId = new Guid("b635c45d-eb2d-4e13-8f9b-ad4b430555f2"),
                            Value = "Monthly subscription fee"
                        },
                        new
                        {
                            Id = new Guid("6b776504-8994-4d71-ade3-aaf982a3c53c"),
                            SurveyQuestionModelId = new Guid("b635c45d-eb2d-4e13-8f9b-ad4b430555f2"),
                            Value = "Commission on earnings"
                        },
                        new
                        {
                            Id = new Guid("3dfbc43e-395d-422f-895b-d309ef0d5361"),
                            SurveyQuestionModelId = new Guid("b635c45d-eb2d-4e13-8f9b-ad4b430555f2"),
                            Value = "I'm not sure"
                        },
                        new
                        {
                            Id = new Guid("1e047dd9-b39b-466e-963b-a5816ef2f9f8"),
                            SurveyQuestionModelId = new Guid("3a1fa3e4-05d4-45ce-92ce-a54bcaccb903"),
                            Value = "Extremely useful"
                        },
                        new
                        {
                            Id = new Guid("a4d39b2b-aadd-4e90-915c-b289c1341b28"),
                            SurveyQuestionModelId = new Guid("3a1fa3e4-05d4-45ce-92ce-a54bcaccb903"),
                            Value = "Very useful"
                        },
                        new
                        {
                            Id = new Guid("0a8b12ce-7666-4714-9905-c09f2875cf89"),
                            SurveyQuestionModelId = new Guid("3a1fa3e4-05d4-45ce-92ce-a54bcaccb903"),
                            Value = "Somewhat useful"
                        },
                        new
                        {
                            Id = new Guid("94fb9766-7eb7-4540-bb0a-050d327759e6"),
                            SurveyQuestionModelId = new Guid("3a1fa3e4-05d4-45ce-92ce-a54bcaccb903"),
                            Value = "Not very useful"
                        },
                        new
                        {
                            Id = new Guid("3ba37a3d-62ee-4024-b86c-6767fdeeec3b"),
                            SurveyQuestionModelId = new Guid("3a1fa3e4-05d4-45ce-92ce-a54bcaccb903"),
                            Value = "Not useful at all"
                        },
                        new
                        {
                            Id = new Guid("ece25c47-265b-4dcc-a8c0-cfb3578850e7"),
                            SurveyQuestionModelId = new Guid("c184d547-6478-415f-a2aa-c77ec6e90bd2"),
                            Value = "More campaign customization options"
                        },
                        new
                        {
                            Id = new Guid("51aeedae-1573-4559-9f74-a0a4b13f0ded"),
                            SurveyQuestionModelId = new Guid("c184d547-6478-415f-a2aa-c77ec6e90bd2"),
                            Value = "Advanced analytics and reporting"
                        },
                        new
                        {
                            Id = new Guid("e16346ef-b4cd-4e6b-9743-c53fb7e7e022"),
                            SurveyQuestionModelId = new Guid("c184d547-6478-415f-a2aa-c77ec6e90bd2"),
                            Value = "Integration with other advertising platforms"
                        },
                        new
                        {
                            Id = new Guid("c78a5ece-f26a-4128-b4a5-99dcf5887de8"),
                            SurveyQuestionModelId = new Guid("c184d547-6478-415f-a2aa-c77ec6e90bd2"),
                            Value = "Improved user interface and navigation"
                        },
                        new
                        {
                            Id = new Guid("3547ea36-c291-4bfa-8c57-e7549a846ab4"),
                            SurveyQuestionModelId = new Guid("c184d547-6478-415f-a2aa-c77ec6e90bd2"),
                            Value = "I'm not sure"
                        });
                });

            modelBuilder.Entity("WePromoLink.Models.SurveyDatapointModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("SurveyAnswerModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SurveyQuestionModelId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SurveyAnswerModelId");

                    b.HasIndex("SurveyQuestionModelId");

                    b.ToTable("SurveyDatapoints");
                });

            modelBuilder.Entity("WePromoLink.Models.SurveyQuestionModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Group")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SurveyQuestions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c5586c12-e2d2-4831-bdb9-259c0ef83298"),
                            Group = 1,
                            Value = "What motivates you to use a platform like WePromoLink?"
                        },
                        new
                        {
                            Id = new Guid("985ecaed-76a9-4dbe-8206-37249f932c0b"),
                            Group = 2,
                            Value = "Which payment methods do you prefer for platform subscriptions and earnings withdrawals?"
                        },
                        new
                        {
                            Id = new Guid("b635c45d-eb2d-4e13-8f9b-ad4b430555f2"),
                            Group = 3,
                            Value = "Do you prefer a monthly subscription fee or paying a commission on earnings?"
                        },
                        new
                        {
                            Id = new Guid("3a1fa3e4-05d4-45ce-92ce-a54bcaccb903"),
                            Group = 4,
                            Value = "How useful do you find the WePromoLink platform for your advertising needs?"
                        },
                        new
                        {
                            Id = new Guid("c184d547-6478-415f-a2aa-c77ec6e90bd2"),
                            Group = 5,
                            Value = "What additional features or improvements would you like to see on the WePromoLink platform?"
                        });
                });

            modelBuilder.Entity("WePromoLink.Models.UserModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BlockageCause")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExternalId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirebaseId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fullname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsBlocked")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSubscribed")
                        .HasColumnType("bit");

                    b.Property<Guid>("SubscriptionModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ThumbnailImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ExternalId");

                    b.HasIndex("SubscriptionModelId")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WePromoLink.HitModel", b =>
                {
                    b.HasOne("WePromoLink.Models.GeoDataModel", "GeoData")
                        .WithMany()
                        .HasForeignKey("GeoDataId");

                    b.HasOne("WePromoLink.Models.LinkModel", "Link")
                        .WithMany("Hits")
                        .HasForeignKey("LinkModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GeoData");

                    b.Navigation("Link");
                });

            modelBuilder.Entity("WePromoLink.Models.AbuseReportModel", b =>
                {
                    b.HasOne("WePromoLink.Models.CampaignModel", "Campaign")
                        .WithMany()
                        .HasForeignKey("CampaignId");

                    b.HasOne("WePromoLink.Models.UserModel", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campaign");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WePromoLink.Models.AffiliatedUserModel", b =>
                {
                    b.HasOne("WePromoLink.Models.UserModel", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WePromoLink.Models.UserModel", "User")
                        .WithMany("AffiliatedUsers")
                        .HasForeignKey("UserModelId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Parent");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WePromoLink.Models.AffiliateModel", b =>
                {
                    b.HasOne("WePromoLink.Models.UserModel", "UserModel")
                        .WithOne("AffiliateProgram")
                        .HasForeignKey("WePromoLink.Models.AffiliateModel", "UserModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserModel");
                });

            modelBuilder.Entity("WePromoLink.Models.AvailableModel", b =>
                {
                    b.HasOne("WePromoLink.Models.UserModel", "User")
                        .WithOne("Available")
                        .HasForeignKey("WePromoLink.Models.AvailableModel", "UserModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WePromoLink.Models.BitcoinBillingMethod", b =>
                {
                    b.HasOne("WePromoLink.Models.UserModel", "User")
                        .WithOne("BitcoinBillingMethod")
                        .HasForeignKey("WePromoLink.Models.BitcoinBillingMethod", "UserModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WePromoLink.Models.BudgetModel", b =>
                {
                    b.HasOne("WePromoLink.Models.UserModel", "User")
                        .WithOne("Budget")
                        .HasForeignKey("WePromoLink.Models.BudgetModel", "UserModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WePromoLink.Models.CampaignModel", b =>
                {
                    b.HasOne("WePromoLink.Models.ImageDataModel", "ImageData")
                        .WithMany()
                        .HasForeignKey("ImageDataModelId");

                    b.HasOne("WePromoLink.Models.UserModel", "User")
                        .WithMany("Campaigns")
                        .HasForeignKey("UserModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ImageData");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WePromoLink.Models.ClickLastWeekOnLinksUserModel", b =>
                {
                    b.HasOne("WePromoLink.Models.UserModel", "User")
                        .WithOne("ClickLastWeekOnLinksUser")
                        .HasForeignKey("WePromoLink.Models.ClickLastWeekOnLinksUserModel", "UserModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WePromoLink.Models.ClicksLastWeekOnCampaignModel", b =>
                {
                    b.HasOne("WePromoLink.Models.CampaignModel", "Campaign")
                        .WithOne("ClicksLastWeekOnCampaign")
                        .HasForeignKey("WePromoLink.Models.ClicksLastWeekOnCampaignModel", "CampaignModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campaign");
                });

            modelBuilder.Entity("WePromoLink.Models.ClicksLastWeekOnCampaignUserModel", b =>
                {
                    b.HasOne("WePromoLink.Models.UserModel", "User")
                        .WithOne("ClicksLastWeekOnCampaignUser")
                        .HasForeignKey("WePromoLink.Models.ClicksLastWeekOnCampaignUserModel", "UserModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WePromoLink.Models.ClicksLastWeekOnLinkModel", b =>
                {
                    b.HasOne("WePromoLink.Models.LinkModel", "Link")
                        .WithOne("ClicksLastWeekOnLink")
                        .HasForeignKey("WePromoLink.Models.ClicksLastWeekOnLinkModel", "LinkModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Link");
                });

            modelBuilder.Entity("WePromoLink.Models.ClicksTodayOnCampaignModel", b =>
                {
                    b.HasOne("WePromoLink.Models.CampaignModel", "Campaign")
                        .WithOne("ClicksTodayOnCampaign")
                        .HasForeignKey("WePromoLink.Models.ClicksTodayOnCampaignModel", "CampaignModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campaign");
                });

            modelBuilder.Entity("WePromoLink.Models.ClicksTodayOnCampaignUserModel", b =>
                {
                    b.HasOne("WePromoLink.Models.UserModel", "User")
                        .WithOne("ClicksTodayOnCampaignUser")
                        .HasForeignKey("WePromoLink.Models.ClicksTodayOnCampaignUserModel", "UserModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WePromoLink.Models.ClicksTodayOnLinkModel", b =>
                {
                    b.HasOne("WePromoLink.Models.LinkModel", "Link")
                        .WithOne("ClicksTodayOnLink")
                        .HasForeignKey("WePromoLink.Models.ClicksTodayOnLinkModel", "LinkModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Link");
                });

            modelBuilder.Entity("WePromoLink.Models.ClicksTodayOnLinksUserModel", b =>
                {
                    b.HasOne("WePromoLink.Models.UserModel", "User")
                        .WithOne("ClicksTodayOnLinksUser")
                        .HasForeignKey("WePromoLink.Models.ClicksTodayOnLinksUserModel", "UserModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WePromoLink.Models.EarnLastWeekOnLinkModel", b =>
                {
                    b.HasOne("WePromoLink.Models.LinkModel", "Link")
                        .WithOne("EarnLastWeekOnLink")
                        .HasForeignKey("WePromoLink.Models.EarnLastWeekOnLinkModel", "LinkModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Link");
                });

            modelBuilder.Entity("WePromoLink.Models.EarnLastWeekUserModel", b =>
                {
                    b.HasOne("WePromoLink.Models.UserModel", "User")
                        .WithOne("EarnLastWeekUser")
                        .HasForeignKey("WePromoLink.Models.EarnLastWeekUserModel", "UserModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WePromoLink.Models.EarnTodayOnLinkModel", b =>
                {
                    b.HasOne("WePromoLink.Models.LinkModel", "Link")
                        .WithOne("EarnTodayOnLink")
                        .HasForeignKey("WePromoLink.Models.EarnTodayOnLinkModel", "LinkModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Link");
                });

            modelBuilder.Entity("WePromoLink.Models.EarnTodayUserModel", b =>
                {
                    b.HasOne("WePromoLink.Models.UserModel", "User")
                        .WithOne("EarnTodayUser")
                        .HasForeignKey("WePromoLink.Models.EarnTodayUserModel", "UserModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WePromoLink.Models.HistoryClicksByCountriesOnCampaignModel", b =>
                {
                    b.HasOne("WePromoLink.Models.CampaignModel", "Campaign")
                        .WithOne("HistoryClicksByCountriesOnCampaign")
                        .HasForeignKey("WePromoLink.Models.HistoryClicksByCountriesOnCampaignModel", "CampaignModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campaign");
                });

            modelBuilder.Entity("WePromoLink.Models.HistoryClicksByCountriesOnCampaignUserModel", b =>
                {
                    b.HasOne("WePromoLink.Models.UserModel", "User")
                        .WithOne("HistoryClicksByCountriesOnCampaignUser")
                        .HasForeignKey("WePromoLink.Models.HistoryClicksByCountriesOnCampaignUserModel", "UserModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WePromoLink.Models.HistoryClicksByCountriesOnLinkModel", b =>
                {
                    b.HasOne("WePromoLink.Models.LinkModel", "Link")
                        .WithOne("HistoryClicksByCountriesOnLink")
                        .HasForeignKey("WePromoLink.Models.HistoryClicksByCountriesOnLinkModel", "LinkModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Link");
                });

            modelBuilder.Entity("WePromoLink.Models.HistoryClicksByCountriesOnLinkUserModel", b =>
                {
                    b.HasOne("WePromoLink.Models.UserModel", "User")
                        .WithOne("HistoryClicksByCountriesOnLinkUser")
                        .HasForeignKey("WePromoLink.Models.HistoryClicksByCountriesOnLinkUserModel", "UserModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WePromoLink.Models.HistoryClicksOnCampaignModel", b =>
                {
                    b.HasOne("WePromoLink.Models.CampaignModel", "Campaign")
                        .WithOne("HistoryClicksOnCampaign")
                        .HasForeignKey("WePromoLink.Models.HistoryClicksOnCampaignModel", "CampaignModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campaign");
                });

            modelBuilder.Entity("WePromoLink.Models.HistoryClicksOnCampaignUserModel", b =>
                {
                    b.HasOne("WePromoLink.Models.UserModel", "User")
                        .WithOne("HistoryClicksOnCampaignUser")
                        .HasForeignKey("WePromoLink.Models.HistoryClicksOnCampaignUserModel", "UserModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WePromoLink.Models.HistoryClicksOnLinkModel", b =>
                {
                    b.HasOne("WePromoLink.Models.LinkModel", null)
                        .WithOne("HistoryClicksOnLink")
                        .HasForeignKey("WePromoLink.Models.HistoryClicksOnLinkModel", "LinkModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WePromoLink.Models.HistoryClicksOnLinksUserModel", b =>
                {
                    b.HasOne("WePromoLink.Models.UserModel", "User")
                        .WithOne("HistoryClicksOnLinksUser")
                        .HasForeignKey("WePromoLink.Models.HistoryClicksOnLinksUserModel", "UserModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WePromoLink.Models.HistoryClicksOnSharesUserModel", b =>
                {
                    b.HasOne("WePromoLink.Models.UserModel", "User")
                        .WithOne("HistoryClicksOnSharesUser")
                        .HasForeignKey("WePromoLink.Models.HistoryClicksOnSharesUserModel", "UserModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WePromoLink.Models.HistoryEarnByCountriesOnLinkModel", b =>
                {
                    b.HasOne("WePromoLink.Models.LinkModel", "Link")
                        .WithOne("HistoryEarnByCountriesOnLink")
                        .HasForeignKey("WePromoLink.Models.HistoryEarnByCountriesOnLinkModel", "LinkModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Link");
                });

            modelBuilder.Entity("WePromoLink.Models.HistoryEarnByCountriesUserModel", b =>
                {
                    b.HasOne("WePromoLink.Models.UserModel", "User")
                        .WithOne("HistoryEarnByCountriesUser")
                        .HasForeignKey("WePromoLink.Models.HistoryEarnByCountriesUserModel", "UserModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WePromoLink.Models.HistoryEarnOnLinkModel", b =>
                {
                    b.HasOne("WePromoLink.Models.LinkModel", "Link")
                        .WithOne("HistoryEarnOnLink")
                        .HasForeignKey("WePromoLink.Models.HistoryEarnOnLinkModel", "LinkModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Link");
                });

            modelBuilder.Entity("WePromoLink.Models.HistoryEarnOnLinksUserModel", b =>
                {
                    b.HasOne("WePromoLink.Models.UserModel", "User")
                        .WithOne("HistoryEarnOnLinksUser")
                        .HasForeignKey("WePromoLink.Models.HistoryEarnOnLinksUserModel", "UserModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WePromoLink.Models.HistorySharedByUsersOnCampaignModel", b =>
                {
                    b.HasOne("WePromoLink.Models.CampaignModel", "Campaign")
                        .WithOne("HistorySharedByUsersOnCampaign")
                        .HasForeignKey("WePromoLink.Models.HistorySharedByUsersOnCampaignModel", "CampaignModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campaign");
                });

            modelBuilder.Entity("WePromoLink.Models.HistorySharedByUsersUserModel", b =>
                {
                    b.HasOne("WePromoLink.Models.UserModel", "User")
                        .WithOne("HistorySharedByUsersUser")
                        .HasForeignKey("WePromoLink.Models.HistorySharedByUsersUserModel", "UserModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WePromoLink.Models.HistorySharedOnCampaignModel", b =>
                {
                    b.HasOne("WePromoLink.Models.CampaignModel", "Campaign")
                        .WithOne("HistorySharedOnCampaign")
                        .HasForeignKey("WePromoLink.Models.HistorySharedOnCampaignModel", "CampaignModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campaign");
                });

            modelBuilder.Entity("WePromoLink.Models.LinkModel", b =>
                {
                    b.HasOne("WePromoLink.Models.CampaignModel", "Campaign")
                        .WithMany("Links")
                        .HasForeignKey("CampaignModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WePromoLink.Models.UserModel", "User")
                        .WithMany("Links")
                        .HasForeignKey("UserModelId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Campaign");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WePromoLink.Models.LockedModel", b =>
                {
                    b.HasOne("WePromoLink.Models.UserModel", "User")
                        .WithOne("Locked")
                        .HasForeignKey("WePromoLink.Models.LockedModel", "UserModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WePromoLink.Models.MyPageModel", b =>
                {
                    b.HasOne("WePromoLink.Models.UserModel", "UserModel")
                        .WithOne("MyPage")
                        .HasForeignKey("WePromoLink.Models.MyPageModel", "UserModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserModel");
                });

            modelBuilder.Entity("WePromoLink.Models.NotificationModel", b =>
                {
                    b.HasOne("WePromoLink.Models.UserModel", "User")
                        .WithMany("Notifications")
                        .HasForeignKey("UserModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WePromoLink.Models.PaymentTransaction", b =>
                {
                    b.HasOne("WePromoLink.Models.CampaignModel", "Campaign")
                        .WithMany("Transactions")
                        .HasForeignKey("CampaignModelId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("WePromoLink.Models.LinkModel", "Link")
                        .WithMany("Transactions")
                        .HasForeignKey("LinkModelId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("WePromoLink.Models.UserModel", "User")
                        .WithMany("Transactions")
                        .HasForeignKey("UserModelId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Campaign");

                    b.Navigation("Link");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WePromoLink.Models.PayoutStatModel", b =>
                {
                    b.HasOne("WePromoLink.Models.UserModel", "User")
                        .WithOne("PayoutStat")
                        .HasForeignKey("WePromoLink.Models.PayoutStatModel", "UserModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WePromoLink.Models.PrivacyModel", b =>
                {
                    b.HasOne("WePromoLink.Models.UserModel", "UserModel")
                        .WithOne("Privacy")
                        .HasForeignKey("WePromoLink.Models.PrivacyModel", "UserModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserModel");
                });

            modelBuilder.Entity("WePromoLink.Models.ProfileModel", b =>
                {
                    b.HasOne("WePromoLink.Models.UserModel", "UserModel")
                        .WithOne("Profile")
                        .HasForeignKey("WePromoLink.Models.ProfileModel", "UserModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserModel");
                });

            modelBuilder.Entity("WePromoLink.Models.ProfitModel", b =>
                {
                    b.HasOne("WePromoLink.Models.UserModel", "User")
                        .WithOne("Profit")
                        .HasForeignKey("WePromoLink.Models.ProfitModel", "UserModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WePromoLink.Models.SettingModel", b =>
                {
                    b.HasOne("WePromoLink.Models.UserModel", "UserModel")
                        .WithOne("Setting")
                        .HasForeignKey("WePromoLink.Models.SettingModel", "UserModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserModel");
                });

            modelBuilder.Entity("WePromoLink.Models.SharedLastWeekOnCampaignModel", b =>
                {
                    b.HasOne("WePromoLink.Models.CampaignModel", "Campaign")
                        .WithOne("SharedLastWeekOnCampaign")
                        .HasForeignKey("WePromoLink.Models.SharedLastWeekOnCampaignModel", "CampaignModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campaign");
                });

            modelBuilder.Entity("WePromoLink.Models.SharedLastWeekUserModel", b =>
                {
                    b.HasOne("WePromoLink.Models.UserModel", "User")
                        .WithOne("SharedLastWeek")
                        .HasForeignKey("WePromoLink.Models.SharedLastWeekUserModel", "UserModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WePromoLink.Models.SharedTodayOnCampaignModel", b =>
                {
                    b.HasOne("WePromoLink.Models.CampaignModel", "Campaign")
                        .WithOne("SharedTodayOnCampaignModel")
                        .HasForeignKey("WePromoLink.Models.SharedTodayOnCampaignModel", "CampaignModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campaign");
                });

            modelBuilder.Entity("WePromoLink.Models.SharedTodayUserModel", b =>
                {
                    b.HasOne("WePromoLink.Models.UserModel", "User")
                        .WithOne("SharedToday")
                        .HasForeignKey("WePromoLink.Models.SharedTodayUserModel", "UserModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WePromoLink.Models.StripeBillingMethod", b =>
                {
                    b.HasOne("WePromoLink.Models.UserModel", "User")
                        .WithOne("StripeBillingMethod")
                        .HasForeignKey("WePromoLink.Models.StripeBillingMethod", "UserModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WePromoLink.Models.SubscriptionFeatureModel", b =>
                {
                    b.HasOne("WePromoLink.Models.SubscriptionPlanModel", null)
                        .WithMany("Features")
                        .HasForeignKey("SubscriptionPlanModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WePromoLink.Models.SubscriptionModel", b =>
                {
                    b.HasOne("WePromoLink.Models.SubscriptionPlanModel", "SubscriptionPlan")
                        .WithMany("Subscriptions")
                        .HasForeignKey("SubscriptionPlanModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SubscriptionPlan");
                });

            modelBuilder.Entity("WePromoLink.Models.SurveyAnswerModel", b =>
                {
                    b.HasOne("WePromoLink.Models.SurveyQuestionModel", "SurveyQuestionModel")
                        .WithMany("Answers")
                        .HasForeignKey("SurveyQuestionModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SurveyQuestionModel");
                });

            modelBuilder.Entity("WePromoLink.Models.SurveyDatapointModel", b =>
                {
                    b.HasOne("WePromoLink.Models.SurveyAnswerModel", "SurveyAnswerModel")
                        .WithMany("Datapoints")
                        .HasForeignKey("SurveyAnswerModelId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("WePromoLink.Models.SurveyQuestionModel", "SurveyQuestionModel")
                        .WithMany("Datapoints")
                        .HasForeignKey("SurveyQuestionModelId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("SurveyAnswerModel");

                    b.Navigation("SurveyQuestionModel");
                });

            modelBuilder.Entity("WePromoLink.Models.UserModel", b =>
                {
                    b.HasOne("WePromoLink.Models.SubscriptionModel", "Subscription")
                        .WithOne("User")
                        .HasForeignKey("WePromoLink.Models.UserModel", "SubscriptionModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subscription");
                });

            modelBuilder.Entity("WePromoLink.Models.CampaignModel", b =>
                {
                    b.Navigation("ClicksLastWeekOnCampaign")
                        .IsRequired();

                    b.Navigation("ClicksTodayOnCampaign")
                        .IsRequired();

                    b.Navigation("HistoryClicksByCountriesOnCampaign")
                        .IsRequired();

                    b.Navigation("HistoryClicksOnCampaign")
                        .IsRequired();

                    b.Navigation("HistorySharedByUsersOnCampaign")
                        .IsRequired();

                    b.Navigation("HistorySharedOnCampaign")
                        .IsRequired();

                    b.Navigation("Links");

                    b.Navigation("SharedLastWeekOnCampaign")
                        .IsRequired();

                    b.Navigation("SharedTodayOnCampaignModel")
                        .IsRequired();

                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("WePromoLink.Models.LinkModel", b =>
                {
                    b.Navigation("ClicksLastWeekOnLink")
                        .IsRequired();

                    b.Navigation("ClicksTodayOnLink")
                        .IsRequired();

                    b.Navigation("EarnLastWeekOnLink")
                        .IsRequired();

                    b.Navigation("EarnTodayOnLink")
                        .IsRequired();

                    b.Navigation("HistoryClicksByCountriesOnLink")
                        .IsRequired();

                    b.Navigation("HistoryClicksOnLink")
                        .IsRequired();

                    b.Navigation("HistoryEarnByCountriesOnLink")
                        .IsRequired();

                    b.Navigation("HistoryEarnOnLink")
                        .IsRequired();

                    b.Navigation("Hits");

                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("WePromoLink.Models.SubscriptionModel", b =>
                {
                    b.Navigation("User")
                        .IsRequired();
                });

            modelBuilder.Entity("WePromoLink.Models.SubscriptionPlanModel", b =>
                {
                    b.Navigation("Features");

                    b.Navigation("Subscriptions");
                });

            modelBuilder.Entity("WePromoLink.Models.SurveyAnswerModel", b =>
                {
                    b.Navigation("Datapoints");
                });

            modelBuilder.Entity("WePromoLink.Models.SurveyQuestionModel", b =>
                {
                    b.Navigation("Answers");

                    b.Navigation("Datapoints");
                });

            modelBuilder.Entity("WePromoLink.Models.UserModel", b =>
                {
                    b.Navigation("AffiliateProgram")
                        .IsRequired();

                    b.Navigation("AffiliatedUsers");

                    b.Navigation("Available")
                        .IsRequired();

                    b.Navigation("BitcoinBillingMethod")
                        .IsRequired();

                    b.Navigation("Budget")
                        .IsRequired();

                    b.Navigation("Campaigns");

                    b.Navigation("ClickLastWeekOnLinksUser")
                        .IsRequired();

                    b.Navigation("ClicksLastWeekOnCampaignUser")
                        .IsRequired();

                    b.Navigation("ClicksTodayOnCampaignUser")
                        .IsRequired();

                    b.Navigation("ClicksTodayOnLinksUser")
                        .IsRequired();

                    b.Navigation("EarnLastWeekUser")
                        .IsRequired();

                    b.Navigation("EarnTodayUser")
                        .IsRequired();

                    b.Navigation("HistoryClicksByCountriesOnCampaignUser")
                        .IsRequired();

                    b.Navigation("HistoryClicksByCountriesOnLinkUser")
                        .IsRequired();

                    b.Navigation("HistoryClicksOnCampaignUser")
                        .IsRequired();

                    b.Navigation("HistoryClicksOnLinksUser")
                        .IsRequired();

                    b.Navigation("HistoryClicksOnSharesUser")
                        .IsRequired();

                    b.Navigation("HistoryEarnByCountriesUser")
                        .IsRequired();

                    b.Navigation("HistoryEarnOnLinksUser")
                        .IsRequired();

                    b.Navigation("HistorySharedByUsersUser")
                        .IsRequired();

                    b.Navigation("Links");

                    b.Navigation("Locked")
                        .IsRequired();

                    b.Navigation("MyPage")
                        .IsRequired();

                    b.Navigation("Notifications");

                    b.Navigation("PayoutStat")
                        .IsRequired();

                    b.Navigation("Privacy")
                        .IsRequired();

                    b.Navigation("Profile")
                        .IsRequired();

                    b.Navigation("Profit")
                        .IsRequired();

                    b.Navigation("Setting")
                        .IsRequired();

                    b.Navigation("SharedLastWeek")
                        .IsRequired();

                    b.Navigation("SharedToday")
                        .IsRequired();

                    b.Navigation("StripeBillingMethod")
                        .IsRequired();

                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
