// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WePromoLink.Data;

#nullable disable

namespace WePromoLink.Shared.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240217225618_Initial2")]
    partial class Initial2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("WePromoLink.HitModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Counter")
                        .HasColumnType("int");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FirstHitAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("GeoDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("GeolocatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsGeolocated")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastHitAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("LinkModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Origin")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GeoDataId");

                    b.HasIndex("LinkModelId");

                    b.ToTable("Hits");
                });

            modelBuilder.Entity("WePromoLink.Models.AbuseReportModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CampaignId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CampaignId");

                    b.HasIndex("UserId");

                    b.ToTable("AbuseReports");
                });

            modelBuilder.Entity("WePromoLink.Models.AffiliatedUserModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<int>("NumberPayments")
                        .HasColumnType("int");

                    b.Property<Guid>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("TotalPayments")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("UserModelId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.HasIndex("UserModelId");

                    b.ToTable("AffiliatedUsers");
                });

            modelBuilder.Entity("WePromoLink.Models.AffiliateModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("AffiliateLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Affiliates")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("MRR")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OTR")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Profit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("UserModelId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserModelId")
                        .IsUnique();

                    b.ToTable("AffiliatePrograms");
                });

            modelBuilder.Entity("WePromoLink.Models.AvailableModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Etag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("MaxAge")
                        .HasColumnType("time");

                    b.Property<Guid>("UserModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Value")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.HasKey("Id");

                    b.HasIndex("UserModelId")
                        .IsUnique();

                    b.ToTable("Availables");
                });

            modelBuilder.Entity("WePromoLink.Models.BitcoinBillingMethod", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("VerifiedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("UserModelId")
                        .IsUnique();

                    b.ToTable("BitcoinBillings");
                });

            modelBuilder.Entity("WePromoLink.Models.BudgetModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Etag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("MaxAge")
                        .HasColumnType("time");

                    b.Property<Guid>("UserModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Value")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.HasKey("Id");

                    b.HasIndex("UserModelId")
                        .IsUnique();

                    b.ToTable("Budgets");
                });

            modelBuilder.Entity("WePromoLink.Models.CampaignModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Budget")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("EPM")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.Property<string>("ExternalId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid?>("ImageDataModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("bit");

                    b.Property<bool>("IsBlocked")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastClick")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastShared")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserModelId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ExternalId");

                    b.HasIndex("ImageDataModelId");

                    b.HasIndex("UserModelId");

                    b.ToTable("Campaigns");
                });

            modelBuilder.Entity("WePromoLink.Models.ClickLastWeekOnLinksUserModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Etag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("MaxAge")
                        .HasColumnType("time");

                    b.Property<Guid>("UserModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserModelId")
                        .IsUnique();

                    b.ToTable("ClickLastWeekOnLinksUsers");
                });

            modelBuilder.Entity("WePromoLink.Models.ClicksLastWeekOnCampaignModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CampaignModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Etag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("MaxAge")
                        .HasColumnType("time");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CampaignModelId")
                        .IsUnique();

                    b.ToTable("ClicksLastWeekOnCampaigns");
                });

            modelBuilder.Entity("WePromoLink.Models.ClicksLastWeekOnCampaignUserModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Etag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("MaxAge")
                        .HasColumnType("time");

                    b.Property<Guid>("UserModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserModelId")
                        .IsUnique();

                    b.ToTable("ClicksLastWeekOnCampaignUsers");
                });

            modelBuilder.Entity("WePromoLink.Models.ClicksLastWeekOnLinkModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Etag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("LinkModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeSpan?>("MaxAge")
                        .HasColumnType("time");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LinkModelId")
                        .IsUnique();

                    b.ToTable("ClicksLastWeekOnLinks");
                });

            modelBuilder.Entity("WePromoLink.Models.ClicksTodayOnCampaignModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CampaignModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Etag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("MaxAge")
                        .HasColumnType("time");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CampaignModelId")
                        .IsUnique();

                    b.ToTable("ClicksTodayOnCampaigns");
                });

            modelBuilder.Entity("WePromoLink.Models.ClicksTodayOnCampaignUserModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Etag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("MaxAge")
                        .HasColumnType("time");

                    b.Property<Guid>("UserModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserModelId")
                        .IsUnique();

                    b.ToTable("ClicksTodayOnCampaignUsers");
                });

            modelBuilder.Entity("WePromoLink.Models.ClicksTodayOnLinkModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Etag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("LinkModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeSpan?>("MaxAge")
                        .HasColumnType("time");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LinkModelId")
                        .IsUnique();

                    b.ToTable("ClicksTodayOnLinks");
                });

            modelBuilder.Entity("WePromoLink.Models.ClicksTodayOnLinksUserModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Etag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("MaxAge")
                        .HasColumnType("time");

                    b.Property<Guid>("UserModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserModelId")
                        .IsUnique();

                    b.ToTable("ClicksTodayOnLinksUsers");
                });

            modelBuilder.Entity("WePromoLink.Models.EarnLastWeekOnLinkModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Etag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("LinkModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeSpan?>("MaxAge")
                        .HasColumnType("time");

                    b.Property<decimal>("Value")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.HasKey("Id");

                    b.HasIndex("LinkModelId")
                        .IsUnique();

                    b.ToTable("EarnLastWeekOnLinks");
                });

            modelBuilder.Entity("WePromoLink.Models.EarnLastWeekUserModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Etag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("MaxAge")
                        .HasColumnType("time");

                    b.Property<Guid>("UserModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Value")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.HasKey("Id");

                    b.HasIndex("UserModelId")
                        .IsUnique();

                    b.ToTable("EarnLastWeekUsers");
                });

            modelBuilder.Entity("WePromoLink.Models.EarnTodayOnLinkModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Etag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("LinkModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeSpan?>("MaxAge")
                        .HasColumnType("time");

                    b.Property<decimal>("Value")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.HasKey("Id");

                    b.HasIndex("LinkModelId")
                        .IsUnique();

                    b.ToTable("EarnTodayOnLinks");
                });

            modelBuilder.Entity("WePromoLink.Models.EarnTodayUserModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Etag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("MaxAge")
                        .HasColumnType("time");

                    b.Property<Guid>("UserModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Value")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.HasKey("Id");

                    b.HasIndex("UserModelId")
                        .IsUnique();

                    b.ToTable("EarnTodayUsers");
                });

            modelBuilder.Entity("WePromoLink.Models.GenericEventModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("GenericEvent");
                });

            modelBuilder.Entity("WePromoLink.Models.GeoDataModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Continent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryFlagUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ISP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Latitude")
                        .HasPrecision(20, 14)
                        .HasColumnType("decimal(20,14)");

                    b.Property<decimal?>("Longitude")
                        .HasPrecision(20, 14)
                        .HasColumnType("decimal(20,14)");

                    b.Property<string>("Region")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegionCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zip")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("GeoDatas");
                });

            modelBuilder.Entity("WePromoLink.Models.HistoryClicksByCountriesOnCampaignModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CampaignModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Etag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("L0")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L8")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L9")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("MaxAge")
                        .HasColumnType("time");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("X0")
                        .HasColumnType("int");

                    b.Property<int>("X1")
                        .HasColumnType("int");

                    b.Property<int>("X2")
                        .HasColumnType("int");

                    b.Property<int>("X3")
                        .HasColumnType("int");

                    b.Property<int>("X4")
                        .HasColumnType("int");

                    b.Property<int>("X5")
                        .HasColumnType("int");

                    b.Property<int>("X6")
                        .HasColumnType("int");

                    b.Property<int>("X7")
                        .HasColumnType("int");

                    b.Property<int>("X8")
                        .HasColumnType("int");

                    b.Property<int>("X9")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CampaignModelId")
                        .IsUnique();

                    b.ToTable("HistoryClicksByCountriesOnCampaigns");
                });

            modelBuilder.Entity("WePromoLink.Models.HistoryClicksByCountriesOnCampaignUserModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Etag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("L0")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L8")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L9")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("MaxAge")
                        .HasColumnType("time");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("X0")
                        .HasColumnType("int");

                    b.Property<int>("X1")
                        .HasColumnType("int");

                    b.Property<int>("X2")
                        .HasColumnType("int");

                    b.Property<int>("X3")
                        .HasColumnType("int");

                    b.Property<int>("X4")
                        .HasColumnType("int");

                    b.Property<int>("X5")
                        .HasColumnType("int");

                    b.Property<int>("X6")
                        .HasColumnType("int");

                    b.Property<int>("X7")
                        .HasColumnType("int");

                    b.Property<int>("X8")
                        .HasColumnType("int");

                    b.Property<int>("X9")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserModelId")
                        .IsUnique();

                    b.ToTable("HistoryClicksByCountriesOnCampaignUsers");
                });

            modelBuilder.Entity("WePromoLink.Models.HistoryClicksByCountriesOnLinkModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Etag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("L0")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L8")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L9")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("LinkModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeSpan?>("MaxAge")
                        .HasColumnType("time");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("X0")
                        .HasColumnType("int");

                    b.Property<int>("X1")
                        .HasColumnType("int");

                    b.Property<int>("X2")
                        .HasColumnType("int");

                    b.Property<int>("X3")
                        .HasColumnType("int");

                    b.Property<int>("X4")
                        .HasColumnType("int");

                    b.Property<int>("X5")
                        .HasColumnType("int");

                    b.Property<int>("X6")
                        .HasColumnType("int");

                    b.Property<int>("X7")
                        .HasColumnType("int");

                    b.Property<int>("X8")
                        .HasColumnType("int");

                    b.Property<int>("X9")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LinkModelId")
                        .IsUnique();

                    b.ToTable("HistoryClicksByCountriesOnLinks");
                });

            modelBuilder.Entity("WePromoLink.Models.HistoryClicksByCountriesOnLinkUserModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Etag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("L0")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L8")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L9")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("MaxAge")
                        .HasColumnType("time");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("X0")
                        .HasColumnType("int");

                    b.Property<int>("X1")
                        .HasColumnType("int");

                    b.Property<int>("X2")
                        .HasColumnType("int");

                    b.Property<int>("X3")
                        .HasColumnType("int");

                    b.Property<int>("X4")
                        .HasColumnType("int");

                    b.Property<int>("X5")
                        .HasColumnType("int");

                    b.Property<int>("X6")
                        .HasColumnType("int");

                    b.Property<int>("X7")
                        .HasColumnType("int");

                    b.Property<int>("X8")
                        .HasColumnType("int");

                    b.Property<int>("X9")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserModelId")
                        .IsUnique();

                    b.ToTable("HistoryClicksByCountriesOnLinkUsers");
                });

            modelBuilder.Entity("WePromoLink.Models.HistoryClicksOnCampaignModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CampaignModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Etag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L0")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L1")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L2")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L3")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L4")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L5")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L6")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L7")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L8")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L9")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("MaxAge")
                        .HasColumnType("time");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("X0")
                        .HasColumnType("int");

                    b.Property<int>("X1")
                        .HasColumnType("int");

                    b.Property<int>("X2")
                        .HasColumnType("int");

                    b.Property<int>("X3")
                        .HasColumnType("int");

                    b.Property<int>("X4")
                        .HasColumnType("int");

                    b.Property<int>("X5")
                        .HasColumnType("int");

                    b.Property<int>("X6")
                        .HasColumnType("int");

                    b.Property<int>("X7")
                        .HasColumnType("int");

                    b.Property<int>("X8")
                        .HasColumnType("int");

                    b.Property<int>("X9")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CampaignModelId")
                        .IsUnique();

                    b.ToTable("HistoryClicksOnCampaigns");
                });

            modelBuilder.Entity("WePromoLink.Models.HistoryClicksOnCampaignUserModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Etag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L0")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L1")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L2")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L3")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L4")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L5")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L6")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L7")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L8")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L9")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("MaxAge")
                        .HasColumnType("time");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("X0")
                        .HasColumnType("int");

                    b.Property<int>("X1")
                        .HasColumnType("int");

                    b.Property<int>("X2")
                        .HasColumnType("int");

                    b.Property<int>("X3")
                        .HasColumnType("int");

                    b.Property<int>("X4")
                        .HasColumnType("int");

                    b.Property<int>("X5")
                        .HasColumnType("int");

                    b.Property<int>("X6")
                        .HasColumnType("int");

                    b.Property<int>("X7")
                        .HasColumnType("int");

                    b.Property<int>("X8")
                        .HasColumnType("int");

                    b.Property<int>("X9")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserModelId")
                        .IsUnique();

                    b.ToTable("HistoryClicksOnCampaignUsers");
                });

            modelBuilder.Entity("WePromoLink.Models.HistoryClicksOnLinkModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Etag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L0")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L1")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L2")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L3")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L4")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L5")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L6")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L7")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L8")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L9")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("LinkModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeSpan?>("MaxAge")
                        .HasColumnType("time");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("X0")
                        .HasColumnType("int");

                    b.Property<int>("X1")
                        .HasColumnType("int");

                    b.Property<int>("X2")
                        .HasColumnType("int");

                    b.Property<int>("X3")
                        .HasColumnType("int");

                    b.Property<int>("X4")
                        .HasColumnType("int");

                    b.Property<int>("X5")
                        .HasColumnType("int");

                    b.Property<int>("X6")
                        .HasColumnType("int");

                    b.Property<int>("X7")
                        .HasColumnType("int");

                    b.Property<int>("X8")
                        .HasColumnType("int");

                    b.Property<int>("X9")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LinkModelId")
                        .IsUnique();

                    b.ToTable("HistoryClicksOnLinkModels");
                });

            modelBuilder.Entity("WePromoLink.Models.HistoryClicksOnLinksUserModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Etag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L0")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L1")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L2")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L3")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L4")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L5")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L6")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L7")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L8")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L9")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("MaxAge")
                        .HasColumnType("time");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("X0")
                        .HasColumnType("int");

                    b.Property<int>("X1")
                        .HasColumnType("int");

                    b.Property<int>("X2")
                        .HasColumnType("int");

                    b.Property<int>("X3")
                        .HasColumnType("int");

                    b.Property<int>("X4")
                        .HasColumnType("int");

                    b.Property<int>("X5")
                        .HasColumnType("int");

                    b.Property<int>("X6")
                        .HasColumnType("int");

                    b.Property<int>("X7")
                        .HasColumnType("int");

                    b.Property<int>("X8")
                        .HasColumnType("int");

                    b.Property<int>("X9")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserModelId")
                        .IsUnique();

                    b.ToTable("HistoryClicksOnLinksUsers");
                });

            modelBuilder.Entity("WePromoLink.Models.HistoryClicksOnSharesUserModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Etag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L0")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L1")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L2")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L3")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L4")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L5")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L6")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L7")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L8")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L9")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("MaxAge")
                        .HasColumnType("time");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("X0")
                        .HasColumnType("int");

                    b.Property<int>("X1")
                        .HasColumnType("int");

                    b.Property<int>("X2")
                        .HasColumnType("int");

                    b.Property<int>("X3")
                        .HasColumnType("int");

                    b.Property<int>("X4")
                        .HasColumnType("int");

                    b.Property<int>("X5")
                        .HasColumnType("int");

                    b.Property<int>("X6")
                        .HasColumnType("int");

                    b.Property<int>("X7")
                        .HasColumnType("int");

                    b.Property<int>("X8")
                        .HasColumnType("int");

                    b.Property<int>("X9")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserModelId")
                        .IsUnique();

                    b.ToTable("HistoryClicksOnSharesUsers");
                });

            modelBuilder.Entity("WePromoLink.Models.HistoryEarnByCountriesOnLinkModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Etag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("L0")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L8")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L9")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("LinkModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeSpan?>("MaxAge")
                        .HasColumnType("time");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("X0")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.Property<decimal>("X1")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.Property<decimal>("X2")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.Property<decimal>("X3")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.Property<decimal>("X4")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.Property<decimal>("X5")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.Property<decimal>("X6")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.Property<decimal>("X7")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.Property<decimal>("X8")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.Property<decimal>("X9")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.HasKey("Id");

                    b.HasIndex("LinkModelId")
                        .IsUnique();

                    b.ToTable("HistoryEarnByCountriesOnLinks");
                });

            modelBuilder.Entity("WePromoLink.Models.HistoryEarnByCountriesUserModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Etag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("L0")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L8")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L9")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("MaxAge")
                        .HasColumnType("time");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("X0")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.Property<decimal>("X1")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.Property<decimal>("X2")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.Property<decimal>("X3")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.Property<decimal>("X4")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.Property<decimal>("X5")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.Property<decimal>("X6")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.Property<decimal>("X7")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.Property<decimal>("X8")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.Property<decimal>("X9")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.HasKey("Id");

                    b.HasIndex("UserModelId")
                        .IsUnique();

                    b.ToTable("HistoryEarnByCountriesUsers");
                });

            modelBuilder.Entity("WePromoLink.Models.HistoryEarnOnLinkModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Etag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L0")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L1")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L2")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L3")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L4")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L5")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L6")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L7")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L8")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L9")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("LinkModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeSpan?>("MaxAge")
                        .HasColumnType("time");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("X0")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.Property<decimal>("X1")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.Property<decimal>("X2")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.Property<decimal>("X3")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.Property<decimal>("X4")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.Property<decimal>("X5")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.Property<decimal>("X6")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.Property<decimal>("X7")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.Property<decimal>("X8")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.Property<decimal>("X9")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.HasKey("Id");

                    b.HasIndex("LinkModelId")
                        .IsUnique();

                    b.ToTable("HistoryEarnOnLinks");
                });

            modelBuilder.Entity("WePromoLink.Models.HistoryEarnOnLinksUserModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Etag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L0")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L1")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L2")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L3")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L4")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L5")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L6")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L7")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L8")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L9")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("MaxAge")
                        .HasColumnType("time");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("X0")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.Property<decimal>("X1")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.Property<decimal>("X2")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.Property<decimal>("X3")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.Property<decimal>("X4")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.Property<decimal>("X5")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.Property<decimal>("X6")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.Property<decimal>("X7")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.Property<decimal>("X8")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.Property<decimal>("X9")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.HasKey("Id");

                    b.HasIndex("UserModelId")
                        .IsUnique();

                    b.ToTable("HistoryEarnOnLinksUsers");
                });

            modelBuilder.Entity("WePromoLink.Models.HistorySharedByUsersOnCampaignModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CampaignModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Etag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("L0")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L8")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L9")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("MaxAge")
                        .HasColumnType("time");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("X0")
                        .HasColumnType("int");

                    b.Property<int>("X1")
                        .HasColumnType("int");

                    b.Property<int>("X2")
                        .HasColumnType("int");

                    b.Property<int>("X3")
                        .HasColumnType("int");

                    b.Property<int>("X4")
                        .HasColumnType("int");

                    b.Property<int>("X5")
                        .HasColumnType("int");

                    b.Property<int>("X6")
                        .HasColumnType("int");

                    b.Property<int>("X7")
                        .HasColumnType("int");

                    b.Property<int>("X8")
                        .HasColumnType("int");

                    b.Property<int>("X9")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CampaignModelId")
                        .IsUnique();

                    b.ToTable("HistorySharedByUsersOnCampaigns");
                });

            modelBuilder.Entity("WePromoLink.Models.HistorySharedByUsersUserModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Etag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("L0")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L8")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L9")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("MaxAge")
                        .HasColumnType("time");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("X0")
                        .HasColumnType("int");

                    b.Property<int>("X1")
                        .HasColumnType("int");

                    b.Property<int>("X2")
                        .HasColumnType("int");

                    b.Property<int>("X3")
                        .HasColumnType("int");

                    b.Property<int>("X4")
                        .HasColumnType("int");

                    b.Property<int>("X5")
                        .HasColumnType("int");

                    b.Property<int>("X6")
                        .HasColumnType("int");

                    b.Property<int>("X7")
                        .HasColumnType("int");

                    b.Property<int>("X8")
                        .HasColumnType("int");

                    b.Property<int>("X9")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserModelId")
                        .IsUnique();

                    b.ToTable("HistorySharedByUsersUsers");
                });

            modelBuilder.Entity("WePromoLink.Models.HistorySharedOnCampaignModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CampaignModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Etag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L0")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L1")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L2")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L3")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L4")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L5")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L6")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L7")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L8")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("L9")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("MaxAge")
                        .HasColumnType("time");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("X0")
                        .HasColumnType("int");

                    b.Property<int>("X1")
                        .HasColumnType("int");

                    b.Property<int>("X2")
                        .HasColumnType("int");

                    b.Property<int>("X3")
                        .HasColumnType("int");

                    b.Property<int>("X4")
                        .HasColumnType("int");

                    b.Property<int>("X5")
                        .HasColumnType("int");

                    b.Property<int>("X6")
                        .HasColumnType("int");

                    b.Property<int>("X7")
                        .HasColumnType("int");

                    b.Property<int>("X8")
                        .HasColumnType("int");

                    b.Property<int>("X9")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CampaignModelId")
                        .IsUnique();

                    b.ToTable("HistorySharedOnCampaigns");
                });

            modelBuilder.Entity("WePromoLink.Models.ImageDataModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Bound")
                        .HasColumnType("bit");

                    b.Property<string>("Compressed")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("CompressedAspectRatio")
                        .HasColumnType("float");

                    b.Property<int>("CompressedHeight")
                        .HasColumnType("int");

                    b.Property<int>("CompressedWidth")
                        .HasColumnType("int");

                    b.Property<string>("ExternalId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Medium")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("MediumAspectRatio")
                        .HasColumnType("float");

                    b.Property<int>("MediumHeight")
                        .HasColumnType("int");

                    b.Property<int>("MediumWidth")
                        .HasColumnType("int");

                    b.Property<string>("Original")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("OriginalAspectRatio")
                        .HasColumnType("float");

                    b.Property<int>("OriginalHeight")
                        .HasColumnType("int");

                    b.Property<int>("OriginalWidth")
                        .HasColumnType("int");

                    b.Property<string>("Thumbnail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ThumbnailAspectRatio")
                        .HasColumnType("float");

                    b.Property<int>("ThumbnailHeight")
                        .HasColumnType("int");

                    b.Property<int>("ThumbnailWidth")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ImageDatas");
                });

            modelBuilder.Entity("WePromoLink.Models.JoinWaitingListModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("JoinWaitingLists");
                });

            modelBuilder.Entity("WePromoLink.Models.LinkModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CampaignModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExternalId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("LastClick")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserModelId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CampaignModelId");

                    b.HasIndex("ExternalId");

                    b.HasIndex("UserModelId");

                    b.ToTable("Links");
                });

            modelBuilder.Entity("WePromoLink.Models.LockedModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Etag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("MaxAge")
                        .HasColumnType("time");

                    b.Property<Guid>("UserModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Value")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.HasKey("Id");

                    b.HasIndex("UserModelId")
                        .IsUnique();

                    b.ToTable("Lockeds");
                });

            modelBuilder.Entity("WePromoLink.Models.MyPageModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CallOfAction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Conversion")
                        .HasColumnType("int");

                    b.Property<string>("ImageHeaderUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QRUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Template")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Visited")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserModelId")
                        .IsUnique();

                    b.ToTable("MyPages");
                });

            modelBuilder.Entity("WePromoLink.Models.NotificationModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Etag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExternalId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("MaxAge")
                        .HasColumnType("time");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserModelId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ExternalId");

                    b.HasIndex("UserModelId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("WePromoLink.Models.PaymentTransaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.Property<Guid?>("CampaignModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CompletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExternalId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid?>("LinkModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Metadata")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransactionType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UserModelId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CampaignModelId");

                    b.HasIndex("ExternalId");

                    b.HasIndex("LinkModelId");

                    b.HasIndex("UserModelId");

                    b.ToTable("PaymentTransactions");
                });

            modelBuilder.Entity("WePromoLink.Models.PayoutStatModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Etag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("MaxAge")
                        .HasColumnType("time");

                    b.Property<Guid>("UserModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Value")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.HasKey("Id");

                    b.HasIndex("UserModelId")
                        .IsUnique();

                    b.ToTable("PayoutStats");
                });

            modelBuilder.Entity("WePromoLink.Models.PrivacyModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("PublicMyPage")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowAffiliateLinkOnMyPage")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowAffiliateLinkOnProfile")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowCallOfActionOnMyPage")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowCampaignsOnProfile")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowEmailOnProfile")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowLinksOnMyPage")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowLinksOnProfile")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowProfitOnProfile")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowQRUrlOnProfile")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowSocialsOnMyPage")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowSocialsOnProfile")
                        .HasColumnType("bit");

                    b.Property<bool>("UseMyPageTemplate")
                        .HasColumnType("bit");

                    b.Property<Guid>("UserModelId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserModelId")
                        .IsUnique();

                    b.ToTable("Privacies");
                });

            modelBuilder.Entity("WePromoLink.Models.ProfileModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Bio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageHeaderUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MyPageId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Social")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserModelId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserModelId")
                        .IsUnique();

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("WePromoLink.Models.ProfitModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Etag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("MaxAge")
                        .HasColumnType("time");

                    b.Property<Guid>("UserModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Value")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.HasKey("Id");

                    b.HasIndex("UserModelId")
                        .IsUnique();

                    b.ToTable("Profits");
                });

            modelBuilder.Entity("WePromoLink.Models.SettingModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("CampaignClickedOnEmail")
                        .HasColumnType("bit");

                    b.Property<bool>("CampaignClickedOnNotification")
                        .HasColumnType("bit");

                    b.Property<bool>("CampaignClickedOnRealTime")
                        .HasColumnType("bit");

                    b.Property<bool>("CampaignCreatedOnEmail")
                        .HasColumnType("bit");

                    b.Property<bool>("CampaignCreatedOnNotification")
                        .HasColumnType("bit");

                    b.Property<bool>("CampaignCreatedOnRealTime")
                        .HasColumnType("bit");

                    b.Property<bool>("CampaignDeletedOnEmail")
                        .HasColumnType("bit");

                    b.Property<bool>("CampaignDeletedOnNotification")
                        .HasColumnType("bit");

                    b.Property<bool>("CampaignDeletedOnRealTime")
                        .HasColumnType("bit");

                    b.Property<bool>("CampaignEditedOnEmail")
                        .HasColumnType("bit");

                    b.Property<bool>("CampaignEditedOnNotification")
                        .HasColumnType("bit");

                    b.Property<bool>("CampaignEditedOnRealTime")
                        .HasColumnType("bit");

                    b.Property<string>("CampaignLanguages")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CampaignPublishedOnEmail")
                        .HasColumnType("bit");

                    b.Property<bool>("CampaignPublishedOnNotification")
                        .HasColumnType("bit");

                    b.Property<bool>("CampaignPublishedOnRealTime")
                        .HasColumnType("bit");

                    b.Property<bool>("CampaignSharedOnEmail")
                        .HasColumnType("bit");

                    b.Property<bool>("CampaignSharedOnNotification")
                        .HasColumnType("bit");

                    b.Property<bool>("CampaignSharedOnRealTime")
                        .HasColumnType("bit");

                    b.Property<bool>("CampaignSoldOutOnEmail")
                        .HasColumnType("bit");

                    b.Property<bool>("CampaignSoldOutOnNotification")
                        .HasColumnType("bit");

                    b.Property<bool>("CampaignSoldOutOnRealTime")
                        .HasColumnType("bit");

                    b.Property<bool>("CampaignUnPublishedOnEmail")
                        .HasColumnType("bit");

                    b.Property<bool>("CampaignUnPublishedOnNotification")
                        .HasColumnType("bit");

                    b.Property<bool>("CampaignUnPublishedOnRealTime")
                        .HasColumnType("bit");

                    b.Property<bool>("HitGeoLocalizedSuccessOnEmail")
                        .HasColumnType("bit");

                    b.Property<bool>("HitGeoLocalizedSuccessOnNotification")
                        .HasColumnType("bit");

                    b.Property<bool>("HitGeoLocalizedSuccessOnRealTime")
                        .HasColumnType("bit");

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LinkClickedOnEmail")
                        .HasColumnType("bit");

                    b.Property<bool>("LinkClickedOnNotification")
                        .HasColumnType("bit");

                    b.Property<bool>("LinkClickedOnRealTime")
                        .HasColumnType("bit");

                    b.Property<bool>("LinkCreatedOnEmail")
                        .HasColumnType("bit");

                    b.Property<bool>("LinkCreatedOnNotification")
                        .HasColumnType("bit");

                    b.Property<bool>("LinkCreatedOnRealTime")
                        .HasColumnType("bit");

                    b.Property<Guid>("UserModelId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserModelId")
                        .IsUnique();

                    b.ToTable("Settings");
                });

            modelBuilder.Entity("WePromoLink.Models.SharedLastWeekOnCampaignModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CampaignModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Etag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("MaxAge")
                        .HasColumnType("time");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CampaignModelId")
                        .IsUnique();

                    b.ToTable("SharedLastWeekOnCampaigns");
                });

            modelBuilder.Entity("WePromoLink.Models.SharedLastWeekUserModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Etag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("MaxAge")
                        .HasColumnType("time");

                    b.Property<Guid>("UserModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserModelId")
                        .IsUnique();

                    b.ToTable("SharedLastWeekUsers");
                });

            modelBuilder.Entity("WePromoLink.Models.SharedTodayOnCampaignModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CampaignModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Etag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("MaxAge")
                        .HasColumnType("time");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CampaignModelId")
                        .IsUnique();

                    b.ToTable("SharedTodayOnCampaigns");
                });

            modelBuilder.Entity("WePromoLink.Models.SharedTodayUserModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Etag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("MaxAge")
                        .HasColumnType("time");

                    b.Property<Guid>("UserModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserModelId")
                        .IsUnique();

                    b.ToTable("SharedTodayUsers");
                });

            modelBuilder.Entity("WePromoLink.Models.StaticPageDataTemplateModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Etag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Json")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("MaxAge")
                        .HasColumnType("time");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("StaticPageDataTemplates");
                });

            modelBuilder.Entity("WePromoLink.Models.StaticPageModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Etag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("IP")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("MaxAge")
                        .HasColumnType("time");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("StaticPageDataTemplateModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("StaticPageWebsiteTemplateModelId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("StaticPageDataTemplateModelId");

                    b.HasIndex("StaticPageWebsiteTemplateModelId");

                    b.ToTable("StaticPages");
                });

            modelBuilder.Entity("WePromoLink.Models.StaticPageProductByPageModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AffiliateClicks")
                        .HasColumnType("int");

                    b.Property<int>("BuyClicks")
                        .HasColumnType("int");

                    b.Property<decimal>("Profit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("StaticPageModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("StaticPageProductModelId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("StaticPageModelId");

                    b.HasIndex("StaticPageProductModelId");

                    b.ToTable("StaticPageProductByPages");
                });

            modelBuilder.Entity("WePromoLink.Models.StaticPageProductByResourceModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("StaticPageProductModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("StaticPageResourceModelId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("StaticPageProductModelId");

                    b.HasIndex("StaticPageResourceModelId");

                    b.ToTable("StaticPageProductByResources");
                });

            modelBuilder.Entity("WePromoLink.Models.StaticPageProductModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AffiliateLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AffiliateProgram")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuyLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Commission")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CostPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Height")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Inventory")
                        .HasColumnType("int");

                    b.Property<decimal?>("Length")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Provider")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SKU")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tags")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Weight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Width")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("StaticPageProducts");
                });

            modelBuilder.Entity("WePromoLink.Models.StaticPageResourceModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Height")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SizeMB")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Width")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("StaticPageResources");
                });

            modelBuilder.Entity("WePromoLink.Models.StaticPageWebsiteTemplateModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Etag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("MaxAge")
                        .HasColumnType("time");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("StaticPageWebsiteTemplates");
                });

            modelBuilder.Entity("WePromoLink.Models.StripeBillingMethod", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("VerifiedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("UserModelId")
                        .IsUnique();

                    b.ToTable("StripeBillings");
                });

            modelBuilder.Entity("WePromoLink.Models.SubscriptionFeatureModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("BoolValue")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SubscriptionPlanModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SubscriptionPlanModelId");

                    b.ToTable("SubscriptionFeatures");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c4ec5857-0583-4a64-8f24-4dc73397ec7b"),
                            BoolValue = false,
                            Name = "Campaigns",
                            SubscriptionPlanModelId = new Guid("24a2fa48-6f7f-4eb1-affe-8b2d7a6c8d32"),
                            Value = "Unlimited"
                        },
                        new
                        {
                            Id = new Guid("b4deaea6-382b-44ee-bfdc-7fa5b1175932"),
                            BoolValue = false,
                            Name = "Links",
                            SubscriptionPlanModelId = new Guid("24a2fa48-6f7f-4eb1-affe-8b2d7a6c8d32"),
                            Value = "Unlimited"
                        },
                        new
                        {
                            Id = new Guid("2fb10b88-c042-4348-bd2e-ec6ca75f3645"),
                            BoolValue = false,
                            Name = "Commission per click",
                            SubscriptionPlanModelId = new Guid("24a2fa48-6f7f-4eb1-affe-8b2d7a6c8d32"),
                            Value = "U$0.09"
                        },
                        new
                        {
                            Id = new Guid("7b67f7b6-4d90-406b-8e37-724b23f572a3"),
                            BoolValue = true,
                            Name = "Contain ads",
                            SubscriptionPlanModelId = new Guid("24a2fa48-6f7f-4eb1-affe-8b2d7a6c8d32"),
                            Value = ""
                        },
                        new
                        {
                            Id = new Guid("1d9f30e3-428a-4dbe-ab17-980ff2ba99d1"),
                            BoolValue = false,
                            Name = "Campaigns",
                            SubscriptionPlanModelId = new Guid("bdcb831d-eeb6-4ff9-aebe-734fbbe40ce5"),
                            Value = "Unlimited"
                        },
                        new
                        {
                            Id = new Guid("3612f2de-787b-4f67-987f-181d82ec7f86"),
                            BoolValue = false,
                            Name = "Links",
                            SubscriptionPlanModelId = new Guid("bdcb831d-eeb6-4ff9-aebe-734fbbe40ce5"),
                            Value = "Unlimited"
                        },
                        new
                        {
                            Id = new Guid("50061763-2048-418f-a10a-c6b24c7dd2e5"),
                            BoolValue = false,
                            Name = "Commission per click",
                            SubscriptionPlanModelId = new Guid("bdcb831d-eeb6-4ff9-aebe-734fbbe40ce5"),
                            Value = "U$0.00"
                        },
                        new
                        {
                            Id = new Guid("01cc70d3-d906-4082-93f3-634e8169fa5f"),
                            BoolValue = false,
                            Name = "Contain ads",
                            SubscriptionPlanModelId = new Guid("bdcb831d-eeb6-4ff9-aebe-734fbbe40ce5"),
                            Value = ""
                        });
                });

            modelBuilder.Entity("WePromoLink.Models.SubscriptionModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CanceledAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExternalId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsCanceled")
                        .HasColumnType("bit");

                    b.Property<bool>("IsExpired")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastPayment")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NextPayment")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SubscriptionPlanModelId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ExternalId");

                    b.HasIndex("SubscriptionPlanModelId");

                    b.ToTable("Subscriptions");
                });

            modelBuilder.Entity("WePromoLink.Models.SubscriptionPlanModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Annually")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.Property<string>("AnnualyPriceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Commission")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Discount")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.Property<string>("ExternalId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Metadata")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Monthly")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.Property<string>("MonthlyPriceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ExternalId");

                    b.ToTable("SubscriptionPlans");

                    b.HasData(
                        new
                        {
                            Id = new Guid("24a2fa48-6f7f-4eb1-affe-8b2d7a6c8d32"),
                            Annually = 0m,
                            AnnualyPriceId = "",
                            Commission = 0.09m,
                            Discount = 0m,
                            ExternalId = "HMa_wvADlWQW",
                            Level = 1,
                            Monthly = 0m,
                            MonthlyPriceId = "price_1OktQYC26XBdqsojcQwEpZTu",
                            Order = 2,
                            PaymentMethod = "stripe",
                            Tag = "",
                            Title = "Basic"
                        },
                        new
                        {
                            Id = new Guid("bdcb831d-eeb6-4ff9-aebe-734fbbe40ce5"),
                            Annually = 0m,
                            AnnualyPriceId = "",
                            Commission = 0m,
                            Discount = 0m,
                            ExternalId = "4eblv1PWMhI2",
                            Level = 2,
                            Monthly = 4.99m,
                            MonthlyPriceId = "price_1OkwiHC26XBdqsojpgor0QaV",
                            Order = 3,
                            PaymentMethod = "stripe",
                            Tag = "Popular",
                            Title = "Professional"
                        });
                });

            modelBuilder.Entity("WePromoLink.Models.SurveyAnswerModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SurveyQuestionModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SurveyQuestionModelId");

                    b.ToTable("SurveyAnswers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3f25d65e-db90-4198-aaa0-0bb934ce7a2f"),
                            SurveyQuestionModelId = new Guid("bea9806c-3447-4de1-924f-fd9fd1dc79f2"),
                            Value = "Earning money through affiliate marketing"
                        },
                        new
                        {
                            Id = new Guid("4e272e2d-5714-41ba-90c1-5c2c8744d0b9"),
                            SurveyQuestionModelId = new Guid("bea9806c-3447-4de1-924f-fd9fd1dc79f2"),
                            Value = "Promoting my products or services"
                        },
                        new
                        {
                            Id = new Guid("bfca7e19-bfd9-4fc0-8052-48a358f4c6d0"),
                            SurveyQuestionModelId = new Guid("bea9806c-3447-4de1-924f-fd9fd1dc79f2"),
                            Value = "Exploring new advertising opportunities"
                        },
                        new
                        {
                            Id = new Guid("8f46e82d-cd5d-461c-a7ee-8da37ca66bb9"),
                            SurveyQuestionModelId = new Guid("bea9806c-3447-4de1-924f-fd9fd1dc79f2"),
                            Value = "Connecting with other users and businesses"
                        },
                        new
                        {
                            Id = new Guid("4289cfa8-8fa9-439a-9112-e71b88f5f012"),
                            SurveyQuestionModelId = new Guid("5c3e48f4-9c88-4fd5-8aaf-b1193abc3243"),
                            Value = "Credit/Debit card"
                        },
                        new
                        {
                            Id = new Guid("512a0c27-962b-4fe4-b2f3-f4ef2bd1ab2c"),
                            SurveyQuestionModelId = new Guid("5c3e48f4-9c88-4fd5-8aaf-b1193abc3243"),
                            Value = "PayPal"
                        },
                        new
                        {
                            Id = new Guid("e0e437dd-bab7-4aa3-bc38-771d87a0cc92"),
                            SurveyQuestionModelId = new Guid("5c3e48f4-9c88-4fd5-8aaf-b1193abc3243"),
                            Value = "Stripe"
                        },
                        new
                        {
                            Id = new Guid("1e80f4e9-0c9d-4762-880b-eab13f6ce7bf"),
                            SurveyQuestionModelId = new Guid("5c3e48f4-9c88-4fd5-8aaf-b1193abc3243"),
                            Value = "Bank transfer"
                        },
                        new
                        {
                            Id = new Guid("b1db5655-1315-4f86-b96c-70a2fe650af7"),
                            SurveyQuestionModelId = new Guid("82125427-cf18-4654-81c7-371ec2c76a5d"),
                            Value = "Monthly subscription fee"
                        },
                        new
                        {
                            Id = new Guid("94005dee-685a-4357-9aa9-d7b708bf9126"),
                            SurveyQuestionModelId = new Guid("82125427-cf18-4654-81c7-371ec2c76a5d"),
                            Value = "Commission on earnings"
                        },
                        new
                        {
                            Id = new Guid("14e4045f-e49e-42ba-8626-6c8bd29a2ca1"),
                            SurveyQuestionModelId = new Guid("82125427-cf18-4654-81c7-371ec2c76a5d"),
                            Value = "I'm not sure"
                        },
                        new
                        {
                            Id = new Guid("bdc5cde1-4ff1-470e-9f8d-7895ea5efe1a"),
                            SurveyQuestionModelId = new Guid("9a5eec8c-e058-4d8f-9531-2ed736c0257c"),
                            Value = "Extremely useful"
                        },
                        new
                        {
                            Id = new Guid("c8a44738-fb17-475b-983c-ff809fac2a1a"),
                            SurveyQuestionModelId = new Guid("9a5eec8c-e058-4d8f-9531-2ed736c0257c"),
                            Value = "Very useful"
                        },
                        new
                        {
                            Id = new Guid("00cb5ad4-db39-49bc-9086-56c964f08ddd"),
                            SurveyQuestionModelId = new Guid("9a5eec8c-e058-4d8f-9531-2ed736c0257c"),
                            Value = "Somewhat useful"
                        },
                        new
                        {
                            Id = new Guid("13efa766-abfd-43d3-8d8a-dd5c4b26bf7f"),
                            SurveyQuestionModelId = new Guid("9a5eec8c-e058-4d8f-9531-2ed736c0257c"),
                            Value = "Not very useful"
                        },
                        new
                        {
                            Id = new Guid("a080d796-9e78-4875-ac89-2ad515dd3273"),
                            SurveyQuestionModelId = new Guid("9a5eec8c-e058-4d8f-9531-2ed736c0257c"),
                            Value = "Not useful at all"
                        },
                        new
                        {
                            Id = new Guid("cf7ba3b6-7a05-4334-b9ab-01cb65dae9e4"),
                            SurveyQuestionModelId = new Guid("9f735dbe-e3a1-4d79-b95f-4499ac874a5e"),
                            Value = "More campaign customization options"
                        },
                        new
                        {
                            Id = new Guid("a5e9a232-8537-44c2-938f-cfda436efed7"),
                            SurveyQuestionModelId = new Guid("9f735dbe-e3a1-4d79-b95f-4499ac874a5e"),
                            Value = "Advanced analytics and reporting"
                        },
                        new
                        {
                            Id = new Guid("1f5975ab-d264-405e-9f84-6ac561bf2043"),
                            SurveyQuestionModelId = new Guid("9f735dbe-e3a1-4d79-b95f-4499ac874a5e"),
                            Value = "Integration with other advertising platforms"
                        },
                        new
                        {
                            Id = new Guid("43043f7a-84fb-4d64-81b4-d943f3eabbce"),
                            SurveyQuestionModelId = new Guid("9f735dbe-e3a1-4d79-b95f-4499ac874a5e"),
                            Value = "Improved user interface and navigation"
                        },
                        new
                        {
                            Id = new Guid("5e36d09d-e7f2-4205-8b67-db0d345c5679"),
                            SurveyQuestionModelId = new Guid("9f735dbe-e3a1-4d79-b95f-4499ac874a5e"),
                            Value = "I'm not sure"
                        });
                });

            modelBuilder.Entity("WePromoLink.Models.SurveyDatapointModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("SurveyAnswerModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SurveyQuestionModelId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SurveyAnswerModelId");

                    b.HasIndex("SurveyQuestionModelId");

                    b.ToTable("SurveyDatapoints");
                });

            modelBuilder.Entity("WePromoLink.Models.SurveyQuestionModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Group")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SurveyQuestions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bea9806c-3447-4de1-924f-fd9fd1dc79f2"),
                            Group = 1,
                            Value = "What motivates you to use a platform like WePromoLink?"
                        },
                        new
                        {
                            Id = new Guid("5c3e48f4-9c88-4fd5-8aaf-b1193abc3243"),
                            Group = 2,
                            Value = "Which payment methods do you prefer for platform subscriptions and earnings withdrawals?"
                        },
                        new
                        {
                            Id = new Guid("82125427-cf18-4654-81c7-371ec2c76a5d"),
                            Group = 3,
                            Value = "Do you prefer a monthly subscription fee or paying a commission on earnings?"
                        },
                        new
                        {
                            Id = new Guid("9a5eec8c-e058-4d8f-9531-2ed736c0257c"),
                            Group = 4,
                            Value = "How useful do you find the WePromoLink platform for your advertising needs?"
                        },
                        new
                        {
                            Id = new Guid("9f735dbe-e3a1-4d79-b95f-4499ac874a5e"),
                            Group = 5,
                            Value = "What additional features or improvements would you like to see on the WePromoLink platform?"
                        });
                });

            modelBuilder.Entity("WePromoLink.Models.UserModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BlockageCause")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExternalId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirebaseId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fullname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsBlocked")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSubscribed")
                        .HasColumnType("bit");

                    b.Property<Guid>("SubscriptionModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ThumbnailImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ExternalId");

                    b.HasIndex("SubscriptionModelId")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WePromoLink.HitModel", b =>
                {
                    b.HasOne("WePromoLink.Models.GeoDataModel", "GeoData")
                        .WithMany()
                        .HasForeignKey("GeoDataId");

                    b.HasOne("WePromoLink.Models.LinkModel", "Link")
                        .WithMany("Hits")
                        .HasForeignKey("LinkModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GeoData");

                    b.Navigation("Link");
                });

            modelBuilder.Entity("WePromoLink.Models.AbuseReportModel", b =>
                {
                    b.HasOne("WePromoLink.Models.CampaignModel", "Campaign")
                        .WithMany()
                        .HasForeignKey("CampaignId");

                    b.HasOne("WePromoLink.Models.UserModel", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campaign");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WePromoLink.Models.AffiliatedUserModel", b =>
                {
                    b.HasOne("WePromoLink.Models.UserModel", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WePromoLink.Models.UserModel", "User")
                        .WithMany("AffiliatedUsers")
                        .HasForeignKey("UserModelId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Parent");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WePromoLink.Models.AffiliateModel", b =>
                {
                    b.HasOne("WePromoLink.Models.UserModel", "UserModel")
                        .WithOne("AffiliateProgram")
                        .HasForeignKey("WePromoLink.Models.AffiliateModel", "UserModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserModel");
                });

            modelBuilder.Entity("WePromoLink.Models.AvailableModel", b =>
                {
                    b.HasOne("WePromoLink.Models.UserModel", "User")
                        .WithOne("Available")
                        .HasForeignKey("WePromoLink.Models.AvailableModel", "UserModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WePromoLink.Models.BitcoinBillingMethod", b =>
                {
                    b.HasOne("WePromoLink.Models.UserModel", "User")
                        .WithOne("BitcoinBillingMethod")
                        .HasForeignKey("WePromoLink.Models.BitcoinBillingMethod", "UserModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WePromoLink.Models.BudgetModel", b =>
                {
                    b.HasOne("WePromoLink.Models.UserModel", "User")
                        .WithOne("Budget")
                        .HasForeignKey("WePromoLink.Models.BudgetModel", "UserModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WePromoLink.Models.CampaignModel", b =>
                {
                    b.HasOne("WePromoLink.Models.ImageDataModel", "ImageData")
                        .WithMany()
                        .HasForeignKey("ImageDataModelId");

                    b.HasOne("WePromoLink.Models.UserModel", "User")
                        .WithMany("Campaigns")
                        .HasForeignKey("UserModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ImageData");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WePromoLink.Models.ClickLastWeekOnLinksUserModel", b =>
                {
                    b.HasOne("WePromoLink.Models.UserModel", "User")
                        .WithOne("ClickLastWeekOnLinksUser")
                        .HasForeignKey("WePromoLink.Models.ClickLastWeekOnLinksUserModel", "UserModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WePromoLink.Models.ClicksLastWeekOnCampaignModel", b =>
                {
                    b.HasOne("WePromoLink.Models.CampaignModel", "Campaign")
                        .WithOne("ClicksLastWeekOnCampaign")
                        .HasForeignKey("WePromoLink.Models.ClicksLastWeekOnCampaignModel", "CampaignModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campaign");
                });

            modelBuilder.Entity("WePromoLink.Models.ClicksLastWeekOnCampaignUserModel", b =>
                {
                    b.HasOne("WePromoLink.Models.UserModel", "User")
                        .WithOne("ClicksLastWeekOnCampaignUser")
                        .HasForeignKey("WePromoLink.Models.ClicksLastWeekOnCampaignUserModel", "UserModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WePromoLink.Models.ClicksLastWeekOnLinkModel", b =>
                {
                    b.HasOne("WePromoLink.Models.LinkModel", "Link")
                        .WithOne("ClicksLastWeekOnLink")
                        .HasForeignKey("WePromoLink.Models.ClicksLastWeekOnLinkModel", "LinkModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Link");
                });

            modelBuilder.Entity("WePromoLink.Models.ClicksTodayOnCampaignModel", b =>
                {
                    b.HasOne("WePromoLink.Models.CampaignModel", "Campaign")
                        .WithOne("ClicksTodayOnCampaign")
                        .HasForeignKey("WePromoLink.Models.ClicksTodayOnCampaignModel", "CampaignModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campaign");
                });

            modelBuilder.Entity("WePromoLink.Models.ClicksTodayOnCampaignUserModel", b =>
                {
                    b.HasOne("WePromoLink.Models.UserModel", "User")
                        .WithOne("ClicksTodayOnCampaignUser")
                        .HasForeignKey("WePromoLink.Models.ClicksTodayOnCampaignUserModel", "UserModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WePromoLink.Models.ClicksTodayOnLinkModel", b =>
                {
                    b.HasOne("WePromoLink.Models.LinkModel", "Link")
                        .WithOne("ClicksTodayOnLink")
                        .HasForeignKey("WePromoLink.Models.ClicksTodayOnLinkModel", "LinkModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Link");
                });

            modelBuilder.Entity("WePromoLink.Models.ClicksTodayOnLinksUserModel", b =>
                {
                    b.HasOne("WePromoLink.Models.UserModel", "User")
                        .WithOne("ClicksTodayOnLinksUser")
                        .HasForeignKey("WePromoLink.Models.ClicksTodayOnLinksUserModel", "UserModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WePromoLink.Models.EarnLastWeekOnLinkModel", b =>
                {
                    b.HasOne("WePromoLink.Models.LinkModel", "Link")
                        .WithOne("EarnLastWeekOnLink")
                        .HasForeignKey("WePromoLink.Models.EarnLastWeekOnLinkModel", "LinkModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Link");
                });

            modelBuilder.Entity("WePromoLink.Models.EarnLastWeekUserModel", b =>
                {
                    b.HasOne("WePromoLink.Models.UserModel", "User")
                        .WithOne("EarnLastWeekUser")
                        .HasForeignKey("WePromoLink.Models.EarnLastWeekUserModel", "UserModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WePromoLink.Models.EarnTodayOnLinkModel", b =>
                {
                    b.HasOne("WePromoLink.Models.LinkModel", "Link")
                        .WithOne("EarnTodayOnLink")
                        .HasForeignKey("WePromoLink.Models.EarnTodayOnLinkModel", "LinkModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Link");
                });

            modelBuilder.Entity("WePromoLink.Models.EarnTodayUserModel", b =>
                {
                    b.HasOne("WePromoLink.Models.UserModel", "User")
                        .WithOne("EarnTodayUser")
                        .HasForeignKey("WePromoLink.Models.EarnTodayUserModel", "UserModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WePromoLink.Models.HistoryClicksByCountriesOnCampaignModel", b =>
                {
                    b.HasOne("WePromoLink.Models.CampaignModel", "Campaign")
                        .WithOne("HistoryClicksByCountriesOnCampaign")
                        .HasForeignKey("WePromoLink.Models.HistoryClicksByCountriesOnCampaignModel", "CampaignModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campaign");
                });

            modelBuilder.Entity("WePromoLink.Models.HistoryClicksByCountriesOnCampaignUserModel", b =>
                {
                    b.HasOne("WePromoLink.Models.UserModel", "User")
                        .WithOne("HistoryClicksByCountriesOnCampaignUser")
                        .HasForeignKey("WePromoLink.Models.HistoryClicksByCountriesOnCampaignUserModel", "UserModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WePromoLink.Models.HistoryClicksByCountriesOnLinkModel", b =>
                {
                    b.HasOne("WePromoLink.Models.LinkModel", "Link")
                        .WithOne("HistoryClicksByCountriesOnLink")
                        .HasForeignKey("WePromoLink.Models.HistoryClicksByCountriesOnLinkModel", "LinkModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Link");
                });

            modelBuilder.Entity("WePromoLink.Models.HistoryClicksByCountriesOnLinkUserModel", b =>
                {
                    b.HasOne("WePromoLink.Models.UserModel", "User")
                        .WithOne("HistoryClicksByCountriesOnLinkUser")
                        .HasForeignKey("WePromoLink.Models.HistoryClicksByCountriesOnLinkUserModel", "UserModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WePromoLink.Models.HistoryClicksOnCampaignModel", b =>
                {
                    b.HasOne("WePromoLink.Models.CampaignModel", "Campaign")
                        .WithOne("HistoryClicksOnCampaign")
                        .HasForeignKey("WePromoLink.Models.HistoryClicksOnCampaignModel", "CampaignModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campaign");
                });

            modelBuilder.Entity("WePromoLink.Models.HistoryClicksOnCampaignUserModel", b =>
                {
                    b.HasOne("WePromoLink.Models.UserModel", "User")
                        .WithOne("HistoryClicksOnCampaignUser")
                        .HasForeignKey("WePromoLink.Models.HistoryClicksOnCampaignUserModel", "UserModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WePromoLink.Models.HistoryClicksOnLinkModel", b =>
                {
                    b.HasOne("WePromoLink.Models.LinkModel", null)
                        .WithOne("HistoryClicksOnLink")
                        .HasForeignKey("WePromoLink.Models.HistoryClicksOnLinkModel", "LinkModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WePromoLink.Models.HistoryClicksOnLinksUserModel", b =>
                {
                    b.HasOne("WePromoLink.Models.UserModel", "User")
                        .WithOne("HistoryClicksOnLinksUser")
                        .HasForeignKey("WePromoLink.Models.HistoryClicksOnLinksUserModel", "UserModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WePromoLink.Models.HistoryClicksOnSharesUserModel", b =>
                {
                    b.HasOne("WePromoLink.Models.UserModel", "User")
                        .WithOne("HistoryClicksOnSharesUser")
                        .HasForeignKey("WePromoLink.Models.HistoryClicksOnSharesUserModel", "UserModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WePromoLink.Models.HistoryEarnByCountriesOnLinkModel", b =>
                {
                    b.HasOne("WePromoLink.Models.LinkModel", "Link")
                        .WithOne("HistoryEarnByCountriesOnLink")
                        .HasForeignKey("WePromoLink.Models.HistoryEarnByCountriesOnLinkModel", "LinkModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Link");
                });

            modelBuilder.Entity("WePromoLink.Models.HistoryEarnByCountriesUserModel", b =>
                {
                    b.HasOne("WePromoLink.Models.UserModel", "User")
                        .WithOne("HistoryEarnByCountriesUser")
                        .HasForeignKey("WePromoLink.Models.HistoryEarnByCountriesUserModel", "UserModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WePromoLink.Models.HistoryEarnOnLinkModel", b =>
                {
                    b.HasOne("WePromoLink.Models.LinkModel", "Link")
                        .WithOne("HistoryEarnOnLink")
                        .HasForeignKey("WePromoLink.Models.HistoryEarnOnLinkModel", "LinkModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Link");
                });

            modelBuilder.Entity("WePromoLink.Models.HistoryEarnOnLinksUserModel", b =>
                {
                    b.HasOne("WePromoLink.Models.UserModel", "User")
                        .WithOne("HistoryEarnOnLinksUser")
                        .HasForeignKey("WePromoLink.Models.HistoryEarnOnLinksUserModel", "UserModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WePromoLink.Models.HistorySharedByUsersOnCampaignModel", b =>
                {
                    b.HasOne("WePromoLink.Models.CampaignModel", "Campaign")
                        .WithOne("HistorySharedByUsersOnCampaign")
                        .HasForeignKey("WePromoLink.Models.HistorySharedByUsersOnCampaignModel", "CampaignModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campaign");
                });

            modelBuilder.Entity("WePromoLink.Models.HistorySharedByUsersUserModel", b =>
                {
                    b.HasOne("WePromoLink.Models.UserModel", "User")
                        .WithOne("HistorySharedByUsersUser")
                        .HasForeignKey("WePromoLink.Models.HistorySharedByUsersUserModel", "UserModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WePromoLink.Models.HistorySharedOnCampaignModel", b =>
                {
                    b.HasOne("WePromoLink.Models.CampaignModel", "Campaign")
                        .WithOne("HistorySharedOnCampaign")
                        .HasForeignKey("WePromoLink.Models.HistorySharedOnCampaignModel", "CampaignModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campaign");
                });

            modelBuilder.Entity("WePromoLink.Models.LinkModel", b =>
                {
                    b.HasOne("WePromoLink.Models.CampaignModel", "Campaign")
                        .WithMany("Links")
                        .HasForeignKey("CampaignModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WePromoLink.Models.UserModel", "User")
                        .WithMany("Links")
                        .HasForeignKey("UserModelId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Campaign");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WePromoLink.Models.LockedModel", b =>
                {
                    b.HasOne("WePromoLink.Models.UserModel", "User")
                        .WithOne("Locked")
                        .HasForeignKey("WePromoLink.Models.LockedModel", "UserModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WePromoLink.Models.MyPageModel", b =>
                {
                    b.HasOne("WePromoLink.Models.UserModel", "UserModel")
                        .WithOne("MyPage")
                        .HasForeignKey("WePromoLink.Models.MyPageModel", "UserModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserModel");
                });

            modelBuilder.Entity("WePromoLink.Models.NotificationModel", b =>
                {
                    b.HasOne("WePromoLink.Models.UserModel", "User")
                        .WithMany("Notifications")
                        .HasForeignKey("UserModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WePromoLink.Models.PaymentTransaction", b =>
                {
                    b.HasOne("WePromoLink.Models.CampaignModel", "Campaign")
                        .WithMany("Transactions")
                        .HasForeignKey("CampaignModelId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("WePromoLink.Models.LinkModel", "Link")
                        .WithMany("Transactions")
                        .HasForeignKey("LinkModelId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("WePromoLink.Models.UserModel", "User")
                        .WithMany("Transactions")
                        .HasForeignKey("UserModelId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Campaign");

                    b.Navigation("Link");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WePromoLink.Models.PayoutStatModel", b =>
                {
                    b.HasOne("WePromoLink.Models.UserModel", "User")
                        .WithOne("PayoutStat")
                        .HasForeignKey("WePromoLink.Models.PayoutStatModel", "UserModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WePromoLink.Models.PrivacyModel", b =>
                {
                    b.HasOne("WePromoLink.Models.UserModel", "UserModel")
                        .WithOne("Privacy")
                        .HasForeignKey("WePromoLink.Models.PrivacyModel", "UserModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserModel");
                });

            modelBuilder.Entity("WePromoLink.Models.ProfileModel", b =>
                {
                    b.HasOne("WePromoLink.Models.UserModel", "UserModel")
                        .WithOne("Profile")
                        .HasForeignKey("WePromoLink.Models.ProfileModel", "UserModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserModel");
                });

            modelBuilder.Entity("WePromoLink.Models.ProfitModel", b =>
                {
                    b.HasOne("WePromoLink.Models.UserModel", "User")
                        .WithOne("Profit")
                        .HasForeignKey("WePromoLink.Models.ProfitModel", "UserModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WePromoLink.Models.SettingModel", b =>
                {
                    b.HasOne("WePromoLink.Models.UserModel", "UserModel")
                        .WithOne("Setting")
                        .HasForeignKey("WePromoLink.Models.SettingModel", "UserModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserModel");
                });

            modelBuilder.Entity("WePromoLink.Models.SharedLastWeekOnCampaignModel", b =>
                {
                    b.HasOne("WePromoLink.Models.CampaignModel", "Campaign")
                        .WithOne("SharedLastWeekOnCampaign")
                        .HasForeignKey("WePromoLink.Models.SharedLastWeekOnCampaignModel", "CampaignModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campaign");
                });

            modelBuilder.Entity("WePromoLink.Models.SharedLastWeekUserModel", b =>
                {
                    b.HasOne("WePromoLink.Models.UserModel", "User")
                        .WithOne("SharedLastWeek")
                        .HasForeignKey("WePromoLink.Models.SharedLastWeekUserModel", "UserModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WePromoLink.Models.SharedTodayOnCampaignModel", b =>
                {
                    b.HasOne("WePromoLink.Models.CampaignModel", "Campaign")
                        .WithOne("SharedTodayOnCampaignModel")
                        .HasForeignKey("WePromoLink.Models.SharedTodayOnCampaignModel", "CampaignModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campaign");
                });

            modelBuilder.Entity("WePromoLink.Models.SharedTodayUserModel", b =>
                {
                    b.HasOne("WePromoLink.Models.UserModel", "User")
                        .WithOne("SharedToday")
                        .HasForeignKey("WePromoLink.Models.SharedTodayUserModel", "UserModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WePromoLink.Models.StaticPageModel", b =>
                {
                    b.HasOne("WePromoLink.Models.StaticPageDataTemplateModel", "StaticPageDataTemplate")
                        .WithMany()
                        .HasForeignKey("StaticPageDataTemplateModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WePromoLink.Models.StaticPageWebsiteTemplateModel", "StaticPageWebsiteTemplate")
                        .WithMany()
                        .HasForeignKey("StaticPageWebsiteTemplateModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StaticPageDataTemplate");

                    b.Navigation("StaticPageWebsiteTemplate");
                });

            modelBuilder.Entity("WePromoLink.Models.StaticPageProductByPageModel", b =>
                {
                    b.HasOne("WePromoLink.Models.StaticPageModel", "Page")
                        .WithMany()
                        .HasForeignKey("StaticPageModelId");

                    b.HasOne("WePromoLink.Models.StaticPageProductModel", "Product")
                        .WithMany()
                        .HasForeignKey("StaticPageProductModelId");

                    b.Navigation("Page");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("WePromoLink.Models.StaticPageProductByResourceModel", b =>
                {
                    b.HasOne("WePromoLink.Models.StaticPageProductModel", "Product")
                        .WithMany()
                        .HasForeignKey("StaticPageProductModelId");

                    b.HasOne("WePromoLink.Models.StaticPageResourceModel", "Resource")
                        .WithMany()
                        .HasForeignKey("StaticPageResourceModelId");

                    b.Navigation("Product");

                    b.Navigation("Resource");
                });

            modelBuilder.Entity("WePromoLink.Models.StripeBillingMethod", b =>
                {
                    b.HasOne("WePromoLink.Models.UserModel", "User")
                        .WithOne("StripeBillingMethod")
                        .HasForeignKey("WePromoLink.Models.StripeBillingMethod", "UserModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WePromoLink.Models.SubscriptionFeatureModel", b =>
                {
                    b.HasOne("WePromoLink.Models.SubscriptionPlanModel", null)
                        .WithMany("Features")
                        .HasForeignKey("SubscriptionPlanModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WePromoLink.Models.SubscriptionModel", b =>
                {
                    b.HasOne("WePromoLink.Models.SubscriptionPlanModel", "SubscriptionPlan")
                        .WithMany("Subscriptions")
                        .HasForeignKey("SubscriptionPlanModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SubscriptionPlan");
                });

            modelBuilder.Entity("WePromoLink.Models.SurveyAnswerModel", b =>
                {
                    b.HasOne("WePromoLink.Models.SurveyQuestionModel", "SurveyQuestionModel")
                        .WithMany("Answers")
                        .HasForeignKey("SurveyQuestionModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SurveyQuestionModel");
                });

            modelBuilder.Entity("WePromoLink.Models.SurveyDatapointModel", b =>
                {
                    b.HasOne("WePromoLink.Models.SurveyAnswerModel", "SurveyAnswerModel")
                        .WithMany("Datapoints")
                        .HasForeignKey("SurveyAnswerModelId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("WePromoLink.Models.SurveyQuestionModel", "SurveyQuestionModel")
                        .WithMany("Datapoints")
                        .HasForeignKey("SurveyQuestionModelId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("SurveyAnswerModel");

                    b.Navigation("SurveyQuestionModel");
                });

            modelBuilder.Entity("WePromoLink.Models.UserModel", b =>
                {
                    b.HasOne("WePromoLink.Models.SubscriptionModel", "Subscription")
                        .WithOne("User")
                        .HasForeignKey("WePromoLink.Models.UserModel", "SubscriptionModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subscription");
                });

            modelBuilder.Entity("WePromoLink.Models.CampaignModel", b =>
                {
                    b.Navigation("ClicksLastWeekOnCampaign")
                        .IsRequired();

                    b.Navigation("ClicksTodayOnCampaign")
                        .IsRequired();

                    b.Navigation("HistoryClicksByCountriesOnCampaign")
                        .IsRequired();

                    b.Navigation("HistoryClicksOnCampaign")
                        .IsRequired();

                    b.Navigation("HistorySharedByUsersOnCampaign")
                        .IsRequired();

                    b.Navigation("HistorySharedOnCampaign")
                        .IsRequired();

                    b.Navigation("Links");

                    b.Navigation("SharedLastWeekOnCampaign")
                        .IsRequired();

                    b.Navigation("SharedTodayOnCampaignModel")
                        .IsRequired();

                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("WePromoLink.Models.LinkModel", b =>
                {
                    b.Navigation("ClicksLastWeekOnLink")
                        .IsRequired();

                    b.Navigation("ClicksTodayOnLink")
                        .IsRequired();

                    b.Navigation("EarnLastWeekOnLink")
                        .IsRequired();

                    b.Navigation("EarnTodayOnLink")
                        .IsRequired();

                    b.Navigation("HistoryClicksByCountriesOnLink")
                        .IsRequired();

                    b.Navigation("HistoryClicksOnLink")
                        .IsRequired();

                    b.Navigation("HistoryEarnByCountriesOnLink")
                        .IsRequired();

                    b.Navigation("HistoryEarnOnLink")
                        .IsRequired();

                    b.Navigation("Hits");

                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("WePromoLink.Models.SubscriptionModel", b =>
                {
                    b.Navigation("User")
                        .IsRequired();
                });

            modelBuilder.Entity("WePromoLink.Models.SubscriptionPlanModel", b =>
                {
                    b.Navigation("Features");

                    b.Navigation("Subscriptions");
                });

            modelBuilder.Entity("WePromoLink.Models.SurveyAnswerModel", b =>
                {
                    b.Navigation("Datapoints");
                });

            modelBuilder.Entity("WePromoLink.Models.SurveyQuestionModel", b =>
                {
                    b.Navigation("Answers");

                    b.Navigation("Datapoints");
                });

            modelBuilder.Entity("WePromoLink.Models.UserModel", b =>
                {
                    b.Navigation("AffiliateProgram")
                        .IsRequired();

                    b.Navigation("AffiliatedUsers");

                    b.Navigation("Available")
                        .IsRequired();

                    b.Navigation("BitcoinBillingMethod")
                        .IsRequired();

                    b.Navigation("Budget")
                        .IsRequired();

                    b.Navigation("Campaigns");

                    b.Navigation("ClickLastWeekOnLinksUser")
                        .IsRequired();

                    b.Navigation("ClicksLastWeekOnCampaignUser")
                        .IsRequired();

                    b.Navigation("ClicksTodayOnCampaignUser")
                        .IsRequired();

                    b.Navigation("ClicksTodayOnLinksUser")
                        .IsRequired();

                    b.Navigation("EarnLastWeekUser")
                        .IsRequired();

                    b.Navigation("EarnTodayUser")
                        .IsRequired();

                    b.Navigation("HistoryClicksByCountriesOnCampaignUser")
                        .IsRequired();

                    b.Navigation("HistoryClicksByCountriesOnLinkUser")
                        .IsRequired();

                    b.Navigation("HistoryClicksOnCampaignUser")
                        .IsRequired();

                    b.Navigation("HistoryClicksOnLinksUser")
                        .IsRequired();

                    b.Navigation("HistoryClicksOnSharesUser")
                        .IsRequired();

                    b.Navigation("HistoryEarnByCountriesUser")
                        .IsRequired();

                    b.Navigation("HistoryEarnOnLinksUser")
                        .IsRequired();

                    b.Navigation("HistorySharedByUsersUser")
                        .IsRequired();

                    b.Navigation("Links");

                    b.Navigation("Locked")
                        .IsRequired();

                    b.Navigation("MyPage")
                        .IsRequired();

                    b.Navigation("Notifications");

                    b.Navigation("PayoutStat")
                        .IsRequired();

                    b.Navigation("Privacy")
                        .IsRequired();

                    b.Navigation("Profile")
                        .IsRequired();

                    b.Navigation("Profit")
                        .IsRequired();

                    b.Navigation("Setting")
                        .IsRequired();

                    b.Navigation("SharedLastWeek")
                        .IsRequired();

                    b.Navigation("SharedToday")
                        .IsRequired();

                    b.Navigation("StripeBillingMethod")
                        .IsRequired();

                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
