name: WepromoLink API Pipeline
on:
  push:
    branches:
      - dev
      
jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with: 
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Install jq
        run: sudo apt-get install jq

      - name: Read version file and set environment variables
        run: |
          versions=$(cat versions.json)
          echo "$versions" | jq -r 'to_entries | .[] | "MICROSERVICE_\(.key | ascii_upcase)=\(.value)"' >> $GITHUB_ENV  
        
      - name: Build and Push Docker Image WePromolink
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: cod4it/wepromolink:${{ env.MICROSERVICE_WEPROMOLINK }}
          file: WePromoLink.Dockerfile
          
      - name: Build and Push Docker Image WePromolink.HitWorker
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: cod4it/wepromolink.hitworker:${{ env.MICROSERVICE_HITWORKER }}
          file: WePromoLink.HitWorker.Dockerfile
          
      - name: Build and Push Docker Image WePromolink.StripeWorker
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: cod4it/wepromolink.stripeworker:${{ env.MICROSERVICE_STRIPEWORKER }}
          file: WePromoLink.StripeWorker.Dockerfile

      - name: Build and Push Docker Image WePromolink.StatsWorker
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: cod4it/wepromolink.statsworker:${{ env.MICROSERVICE_STATWORKER }}
          file: WePromoLink.StatsWorker.Dockerfile

      - name: Build and Push Docker Image WePromolink.Controller
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: cod4it/wepromolink.controller:${{ env.MICROSERVICE_CONTROLLER }}
          file: WePromoLink.Controller.Dockerfile
      
      - name: Build and Push Docker Image WePromolink.NotiWorker
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: cod4it/wepromolink.notiworker:${{ env.MICROSERVICE_NOTIWORKER }}
          file: WePromoLink.NotiWorker.Dockerfile

      - name: Build and Push Docker Image WePromolink.GeoLocationWorker
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: cod4it/wepromolink.geolocationworker:${{ env.MICROSERVICE_GEOLOCATIONWORKER }}
          file: WePromoLink.GeoLocationWorker.Dockerfile

      - name: Build and Push Docker Image WePromolink.BtcpayWorker
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: cod4it/wepromolink.btcpayworker:${{ env.MICROSERVICE_BTCPAYWORKER }}
          file: WePromoLink.BtcpayWorker.Dockerfile

      - name: Build and Push Docker Image WePromolink.Backoffice
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: cod4it/wepromolink.backoffice:${{ env.MICROSERVICE_BACKOFFICE }}
          file: WePromoLink.Backoffice.Dockerfile

      - name: Executing remote ssh commands
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.WEPROMOLINK_DEV_HOST }}
          username: ${{ secrets.WEPROMOLINK_DEV_USERNAME }}
          password: ${{ secrets.WEPROMOLINK_DEV_PASSWORD }}
          script:  |
            cd code
            cd api.wepromolink/
            git pull
            cd K8s/
            cd Dev/
            versions=$(cat ../../versions.json)
            readarray -t versions <<< "$(echo "$versions" | jq -r 'to_entries | .[] | "MICROSERVICE_\(.key | ascii_upcase)=\(.value)"')"; for v in "${versions[@]}"; do export "$v"; done
            envsubst < wepromolink_dev.yml > wepromolink_dev_ready.yml
            microk8s kubectl apply -f wepromolink_dev_ready.yml